
FAN.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001200  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00001200  00001294  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800076  00800076  000012aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000012aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000012dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000370  00000000  00000000  00001318  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002543  00000000  00000000  00001688  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e76  00000000  00000000  00003bcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001cb9  00000000  00000000  00004a41  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000007c0  00000000  00000000  000066fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f2d  00000000  00000000  00006ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001cb4  00000000  00000000  00007de9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002d0  00000000  00000000  00009a9d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 8f 04 	jmp	0x91e	; 0x91e <__vector_6>
      1c:	0c 94 b6 04 	jmp	0x96c	; 0x96c <__vector_7>
      20:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__vector_8>
      24:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__vector_9>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	3b 05       	cpc	r19, r11
      56:	48 05       	cpc	r20, r8
      58:	55 05       	cpc	r21, r5
      5a:	62 05       	cpc	r22, r2
      5c:	6f 05       	cpc	r22, r15
      5e:	7c 05       	cpc	r23, r12
      60:	89 05       	cpc	r24, r9
      62:	96 05       	cpc	r25, r6
      64:	a3 05       	cpc	r26, r3
      66:	b0 05       	cpc	r27, r0
      68:	bd 05       	cpc	r27, r13
      6a:	ca 05       	cpc	r28, r10
      6c:	d7 05       	cpc	r29, r7
      6e:	fd 05       	cpc	r31, r13
      70:	e4 05       	cpc	r30, r4
      72:	f1 05       	cpc	r31, r1

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf e5       	ldi	r28, 0x5F	; 95
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	10 e0       	ldi	r17, 0x00	; 0
      82:	a0 e6       	ldi	r26, 0x60	; 96
      84:	b0 e0       	ldi	r27, 0x00	; 0
      86:	e0 e0       	ldi	r30, 0x00	; 0
      88:	f2 e1       	ldi	r31, 0x12	; 18
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a6 37       	cpi	r26, 0x76	; 118
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	20 e0       	ldi	r18, 0x00	; 0
      98:	a6 e7       	ldi	r26, 0x76	; 118
      9a:	b0 e0       	ldi	r27, 0x00	; 0
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a6 38       	cpi	r26, 0x86	; 134
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
      aa:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <main>:
#include "../HAL/DCM/DCM_interface.h"
#include "../HAL/SERVOMOTOR/SERVO_interface.h"
#include "../HAL/SEVEN_SEGMENT_BCD/SEVEN_SEGMENT_BCD_interface.h"

int main(void)
{u8 Buttonon=0 ,ButtonRoll=0, speadcount=0, rollcount=0,anglecount=0;s8 angle=0;
      b2:	cf 93       	push	r28
      b4:	df 93       	push	r29
      b6:	00 d0       	rcall	.+0      	; 0xb8 <main+0x6>
      b8:	cd b7       	in	r28, 0x3d	; 61
      ba:	de b7       	in	r29, 0x3e	; 62
      bc:	19 82       	std	Y+1, r1	; 0x01
      be:	1a 82       	std	Y+2, r1	; 0x02
	////switches
	SW_init(SW_PORTB,SW_PIN0);//Button on & Speed
      c0:	60 e0       	ldi	r22, 0x00	; 0
      c2:	81 e0       	ldi	r24, 0x01	; 1
      c4:	0e 94 2f 03 	call	0x65e	; 0x65e <SW_init>
    SW_init(SW_PORTD,SW_PIN6);//ButtonRoll
      c8:	66 e0       	ldi	r22, 0x06	; 6
      ca:	83 e0       	ldi	r24, 0x03	; 3
      cc:	0e 94 2f 03 	call	0x65e	; 0x65e <SW_init>
	////leds
	LED_init(LED_PORTC,LED_PIN2);//LED on & Speed
      d0:	62 e0       	ldi	r22, 0x02	; 2
      d2:	82 e0       	ldi	r24, 0x02	; 2
      d4:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <LED_init>
	LED_init(LED_PORTC,LED_PIN7);//LEDRoll
      d8:	67 e0       	ldi	r22, 0x07	; 7
      da:	82 e0       	ldi	r24, 0x02	; 2
      dc:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <LED_init>
	//TIMER 1 (motors control)
	TMR1_HAL_init(TMR1_HAL_FASTPWM_ICR1,TMR1_HAL_CLEAR_OC1);
      e0:	62 e0       	ldi	r22, 0x02	; 2
      e2:	8e e0       	ldi	r24, 0x0E	; 14
      e4:	0e 94 36 03 	call	0x66c	; 0x66c <TMR1_HAL_init>
	TMR1_HAL_start();
      e8:	0e 94 39 03 	call	0x672	; 0x672 <TMR1_HAL_start>
	////DC
	DCM_init(DCM_MOTOR_A);
      ec:	80 e0       	ldi	r24, 0x00	; 0
      ee:	0e 94 14 01 	call	0x228	; 0x228 <DCM_init>
	////Servo
	SERVO_init();
      f2:	0e 94 f6 01 	call	0x3ec	; 0x3ec <SERVO_init>
	////ServSEVEN SEGMENT
	SEVEN_SEGMENT_BCD_init(SEVEN_SEGMENT_BCD_ONE,dipnotused);
      f6:	60 e0       	ldi	r22, 0x00	; 0
      f8:	80 e0       	ldi	r24, 0x00	; 0
      fa:	0e 94 9a 02 	call	0x534	; 0x534 <SEVEN_SEGMENT_BCD_init>
#include "../HAL/DCM/DCM_interface.h"
#include "../HAL/SERVOMOTOR/SERVO_interface.h"
#include "../HAL/SEVEN_SEGMENT_BCD/SEVEN_SEGMENT_BCD_interface.h"

int main(void)
{u8 Buttonon=0 ,ButtonRoll=0, speadcount=0, rollcount=0,anglecount=0;s8 angle=0;
      fe:	f1 2c       	mov	r15, r1
     100:	e1 2c       	mov	r14, r1
     102:	00 e0       	ldi	r16, 0x00	; 0
     104:	10 e0       	ldi	r17, 0x00	; 0
	
	
    while (1) 
    {
		//reading part
	SW_getSwitchPinValue(SW_PORTB,SW_PIN0,&Buttonon);
     106:	ae 01       	movw	r20, r28
     108:	4f 5f       	subi	r20, 0xFF	; 255
     10a:	5f 4f       	sbci	r21, 0xFF	; 255
     10c:	60 e0       	ldi	r22, 0x00	; 0
     10e:	81 e0       	ldi	r24, 0x01	; 1
     110:	0e 94 33 03 	call	0x666	; 0x666 <SW_getSwitchPinValue>
	SW_getSwitchPinValue(SW_PORTD,SW_PIN6,&ButtonRoll);
     114:	ae 01       	movw	r20, r28
     116:	4e 5f       	subi	r20, 0xFE	; 254
     118:	5f 4f       	sbci	r21, 0xFF	; 255
     11a:	66 e0       	ldi	r22, 0x06	; 6
     11c:	83 e0       	ldi	r24, 0x03	; 3
     11e:	0e 94 33 03 	call	0x666	; 0x666 <SW_getSwitchPinValue>
		
	if (Buttonon == 1)
     122:	89 81       	ldd	r24, Y+1	; 0x01
     124:	81 30       	cpi	r24, 0x01	; 1
     126:	79 f4       	brne	.+30     	; 0x146 <main+0x94>
     128:	07 c0       	rjmp	.+14     	; 0x138 <main+0x86>
	{
		while(Buttonon == 1)//debouncing 
		{
			SW_getSwitchPinValue(SW_PORTB,SW_PIN0,&Buttonon);
     12a:	ae 01       	movw	r20, r28
     12c:	4f 5f       	subi	r20, 0xFF	; 255
     12e:	5f 4f       	sbci	r21, 0xFF	; 255
     130:	60 e0       	ldi	r22, 0x00	; 0
     132:	81 e0       	ldi	r24, 0x01	; 1
     134:	0e 94 33 03 	call	0x666	; 0x666 <SW_getSwitchPinValue>
	SW_getSwitchPinValue(SW_PORTB,SW_PIN0,&Buttonon);
	SW_getSwitchPinValue(SW_PORTD,SW_PIN6,&ButtonRoll);
		
	if (Buttonon == 1)
	{
		while(Buttonon == 1)//debouncing 
     138:	89 81       	ldd	r24, Y+1	; 0x01
     13a:	81 30       	cpi	r24, 0x01	; 1
     13c:	b1 f3       	breq	.-20     	; 0x12a <main+0x78>
		{
			SW_getSwitchPinValue(SW_PORTB,SW_PIN0,&Buttonon);
		}
		speadcount++;
     13e:	1f 5f       	subi	r17, 0xFF	; 255
		if (speadcount > 3)
     140:	14 30       	cpi	r17, 0x04	; 4
     142:	08 f0       	brcs	.+2      	; 0x146 <main+0x94>
		{
			speadcount = 0;
     144:	10 e0       	ldi	r17, 0x00	; 0
	}else
	{
		//no thing
	}
	
	if (ButtonRoll == 1)
     146:	8a 81       	ldd	r24, Y+2	; 0x02
     148:	81 30       	cpi	r24, 0x01	; 1
     14a:	79 f4       	brne	.+30     	; 0x16a <main+0xb8>
     14c:	07 c0       	rjmp	.+14     	; 0x15c <main+0xaa>
	{
		while(ButtonRoll == 1)
		{
			SW_getSwitchPinValue(SW_PORTD,SW_PIN6,&ButtonRoll);
     14e:	ae 01       	movw	r20, r28
     150:	4e 5f       	subi	r20, 0xFE	; 254
     152:	5f 4f       	sbci	r21, 0xFF	; 255
     154:	66 e0       	ldi	r22, 0x06	; 6
     156:	83 e0       	ldi	r24, 0x03	; 3
     158:	0e 94 33 03 	call	0x666	; 0x666 <SW_getSwitchPinValue>
		//no thing
	}
	
	if (ButtonRoll == 1)
	{
		while(ButtonRoll == 1)
     15c:	8a 81       	ldd	r24, Y+2	; 0x02
     15e:	81 30       	cpi	r24, 0x01	; 1
     160:	b1 f3       	breq	.-20     	; 0x14e <main+0x9c>
		{
			SW_getSwitchPinValue(SW_PORTD,SW_PIN6,&ButtonRoll);
		}
		rollcount++;
     162:	0f 5f       	subi	r16, 0xFF	; 255
		if (rollcount == 2)
     164:	02 30       	cpi	r16, 0x02	; 2
     166:	09 f4       	brne	.+2      	; 0x16a <main+0xb8>
		{
			rollcount = 0;
     168:	00 e0       	ldi	r16, 0x00	; 0
		//no thing
	}	
	
		//doing part
	
	if (speadcount > 0)
     16a:	11 23       	and	r17, r17
     16c:	01 f1       	breq	.+64     	; 0x1ae <main+0xfc>
	{
		LED_on(LED_PORTC,LED_PIN2);
     16e:	62 e0       	ldi	r22, 0x02	; 2
     170:	82 e0       	ldi	r24, 0x02	; 2
     172:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LED_on>
		SEVEN_SEGMENT_BCD_write(SEVEN_SEGMENT_BCD_ONE,speadcount);
     176:	61 2f       	mov	r22, r17
     178:	80 e0       	ldi	r24, 0x00	; 0
     17a:	0e 94 de 02 	call	0x5bc	; 0x5bc <SEVEN_SEGMENT_BCD_write>
		switch (speadcount)
     17e:	12 30       	cpi	r17, 0x02	; 2
     180:	51 f0       	breq	.+20     	; 0x196 <main+0xe4>
     182:	13 30       	cpi	r17, 0x03	; 3
     184:	71 f0       	breq	.+28     	; 0x1a2 <main+0xf0>
     186:	11 30       	cpi	r17, 0x01	; 1
     188:	01 f5       	brne	.+64     	; 0x1ca <main+0x118>
		{
			case 1:
			DCM_onControlSpeed(DCM_MOTOR_A,DCM_COUNTER_CLOCK_WISE,30);
     18a:	4e e1       	ldi	r20, 0x1E	; 30
     18c:	61 e0       	ldi	r22, 0x01	; 1
     18e:	80 e0       	ldi	r24, 0x00	; 0
     190:	0e 94 3d 01 	call	0x27a	; 0x27a <DCM_onControlSpeed>
			break;
     194:	1a c0       	rjmp	.+52     	; 0x1ca <main+0x118>
			
			case 2:
			DCM_onControlSpeed(DCM_MOTOR_A,DCM_COUNTER_CLOCK_WISE,60);
     196:	4c e3       	ldi	r20, 0x3C	; 60
     198:	61 e0       	ldi	r22, 0x01	; 1
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	0e 94 3d 01 	call	0x27a	; 0x27a <DCM_onControlSpeed>
			break;
     1a0:	14 c0       	rjmp	.+40     	; 0x1ca <main+0x118>
			
			case 3:
			DCM_onControlSpeed(DCM_MOTOR_A,DCM_COUNTER_CLOCK_WISE,90);
     1a2:	4a e5       	ldi	r20, 0x5A	; 90
     1a4:	61 e0       	ldi	r22, 0x01	; 1
     1a6:	80 e0       	ldi	r24, 0x00	; 0
     1a8:	0e 94 3d 01 	call	0x27a	; 0x27a <DCM_onControlSpeed>
			break;
     1ac:	0e c0       	rjmp	.+28     	; 0x1ca <main+0x118>
						
		}
	} 
	else
	{
		LED_off(LED_PORTC,LED_PIN2);
     1ae:	62 e0       	ldi	r22, 0x02	; 2
     1b0:	82 e0       	ldi	r24, 0x02	; 2
     1b2:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <LED_off>
		DCM_off(DCM_MOTOR_A);
     1b6:	80 e0       	ldi	r24, 0x00	; 0
     1b8:	0e 94 c2 01 	call	0x384	; 0x384 <DCM_off>
		SEVEN_SEGMENT_BCD_write(SEVEN_SEGMENT_BCD_ONE,speadcount);
     1bc:	61 2f       	mov	r22, r17
     1be:	80 e0       	ldi	r24, 0x00	; 0
     1c0:	0e 94 de 02 	call	0x5bc	; 0x5bc <SEVEN_SEGMENT_BCD_write>
		SEVEN_SEGMENT_BCD_off(SEVEN_SEGMENT_BCD_ONE);
     1c4:	80 e0       	ldi	r24, 0x00	; 0
     1c6:	0e 94 1d 03 	call	0x63a	; 0x63a <SEVEN_SEGMENT_BCD_off>
		
	}
	
	
	if (rollcount == 1 && (speadcount > 0))
     1ca:	01 30       	cpi	r16, 0x01	; 1
     1cc:	21 f5       	brne	.+72     	; 0x216 <main+0x164>
     1ce:	11 23       	and	r17, r17
     1d0:	11 f1       	breq	.+68     	; 0x216 <main+0x164>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1d2:	2f ef       	ldi	r18, 0xFF	; 255
     1d4:	80 e7       	ldi	r24, 0x70	; 112
     1d6:	92 e0       	ldi	r25, 0x02	; 2
     1d8:	21 50       	subi	r18, 0x01	; 1
     1da:	80 40       	sbci	r24, 0x00	; 0
     1dc:	90 40       	sbci	r25, 0x00	; 0
     1de:	e1 f7       	brne	.-8      	; 0x1d8 <main+0x126>
     1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <main+0x130>
     1e2:	00 00       	nop
	{	
		_delay_ms(50);
		LED_on(LED_PORTC,LED_PIN7);
     1e4:	67 e0       	ldi	r22, 0x07	; 7
     1e6:	82 e0       	ldi	r24, 0x02	; 2
     1e8:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LED_on>
		if (angle == -90)
     1ec:	26 ea       	ldi	r18, 0xA6	; 166
     1ee:	f2 16       	cp	r15, r18
     1f0:	21 f0       	breq	.+8      	; 0x1fa <main+0x148>
		{
			anglecount =0;
		} 
		else if (angle == 90)
     1f2:	8a e5       	ldi	r24, 0x5A	; 90
     1f4:	f8 12       	cpse	r15, r24
     1f6:	05 c0       	rjmp	.+10     	; 0x202 <main+0x150>
     1f8:	02 c0       	rjmp	.+4      	; 0x1fe <main+0x14c>
	{	
		_delay_ms(50);
		LED_on(LED_PORTC,LED_PIN7);
		if (angle == -90)
		{
			anglecount =0;
     1fa:	e1 2c       	mov	r14, r1
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <main+0x150>
		} 
		else if (angle == 90)
		{
			anglecount =1;
     1fe:	ee 24       	eor	r14, r14
     200:	e3 94       	inc	r14
		}
		
		if (anglecount == 0)
     202:	e1 10       	cpse	r14, r1
     204:	02 c0       	rjmp	.+4      	; 0x20a <main+0x158>
		{
			angle++;
     206:	f3 94       	inc	r15
     208:	01 c0       	rjmp	.+2      	; 0x20c <main+0x15a>
		} 
		else
		{
			angle--;
     20a:	fa 94       	dec	r15
		}
			SERVO_angle(SERVO90,angle);
     20c:	6f 2d       	mov	r22, r15
     20e:	80 e0       	ldi	r24, 0x00	; 0
     210:	0e 94 07 02 	call	0x40e	; 0x40e <SERVO_angle>
     214:	78 cf       	rjmp	.-272    	; 0x106 <main+0x54>
		
	}
	else
	{
		LED_off(LED_PORTC,LED_PIN7);
     216:	67 e0       	ldi	r22, 0x07	; 7
     218:	82 e0       	ldi	r24, 0x02	; 2
     21a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <LED_off>
		SERVO_angle(SERVO90,angle);
     21e:	6f 2d       	mov	r22, r15
     220:	80 e0       	ldi	r24, 0x00	; 0
     222:	0e 94 07 02 	call	0x40e	; 0x40e <SERVO_angle>
     226:	6f cf       	rjmp	.-290    	; 0x106 <main+0x54>

00000228 <DCM_init>:
     228:	cf 93       	push	r28
     22a:	df 93       	push	r29
     22c:	81 11       	cpse	r24, r1
     22e:	21 c0       	rjmp	.+66     	; 0x272 <DCM_init+0x4a>
     230:	d8 2f       	mov	r29, r24
     232:	c8 2f       	mov	r28, r24
     234:	cc 0f       	add	r28, r28
     236:	c8 0f       	add	r28, r24
     238:	0c c0       	rjmp	.+24     	; 0x252 <DCM_init+0x2a>
     23a:	da 01       	movw	r26, r20
     23c:	a0 5a       	subi	r26, 0xA0	; 160
     23e:	bf 4f       	sbci	r27, 0xFF	; 255
     240:	fa 01       	movw	r30, r20
     242:	ed 59       	subi	r30, 0x9D	; 157
     244:	ff 4f       	sbci	r31, 0xFF	; 255
     246:	41 e0       	ldi	r20, 0x01	; 1
     248:	6c 91       	ld	r22, X
     24a:	80 81       	ld	r24, Z
     24c:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_setPinDirection>
     250:	cf 5f       	subi	r28, 0xFF	; 255
     252:	4c 2f       	mov	r20, r28
     254:	50 e0       	ldi	r21, 0x00	; 0
     256:	2d 2f       	mov	r18, r29
     258:	30 e0       	ldi	r19, 0x00	; 0
     25a:	2f 5f       	subi	r18, 0xFF	; 255
     25c:	3f 4f       	sbci	r19, 0xFF	; 255
     25e:	b9 01       	movw	r22, r18
     260:	66 0f       	add	r22, r22
     262:	77 1f       	adc	r23, r23
     264:	26 0f       	add	r18, r22
     266:	37 1f       	adc	r19, r23
     268:	42 17       	cp	r20, r18
     26a:	53 07       	cpc	r21, r19
     26c:	34 f3       	brlt	.-52     	; 0x23a <DCM_init+0x12>
     26e:	80 e0       	ldi	r24, 0x00	; 0
     270:	01 c0       	rjmp	.+2      	; 0x274 <DCM_init+0x4c>
     272:	81 e0       	ldi	r24, 0x01	; 1
     274:	df 91       	pop	r29
     276:	cf 91       	pop	r28
     278:	08 95       	ret

0000027a <DCM_onControlSpeed>:
     27a:	af 92       	push	r10
     27c:	bf 92       	push	r11
     27e:	cf 92       	push	r12
     280:	df 92       	push	r13
     282:	ef 92       	push	r14
     284:	ff 92       	push	r15
     286:	0f 93       	push	r16
     288:	1f 93       	push	r17
     28a:	cf 93       	push	r28
     28c:	df 93       	push	r29
     28e:	81 11       	cpse	r24, r1
     290:	69 c0       	rjmp	.+210    	; 0x364 <DCM_onControlSpeed+0xea>
     292:	45 36       	cpi	r20, 0x65	; 101
     294:	08 f0       	brcs	.+2      	; 0x298 <DCM_onControlSpeed+0x1e>
     296:	68 c0       	rjmp	.+208    	; 0x368 <DCM_onControlSpeed+0xee>
     298:	14 2f       	mov	r17, r20
     29a:	66 23       	and	r22, r22
     29c:	19 f0       	breq	.+6      	; 0x2a4 <DCM_onControlSpeed+0x2a>
     29e:	61 30       	cpi	r22, 0x01	; 1
     2a0:	01 f1       	breq	.+64     	; 0x2e2 <DCM_onControlSpeed+0x68>
     2a2:	64 c0       	rjmp	.+200    	; 0x36c <DCM_onControlSpeed+0xf2>
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	ec 01       	movw	r28, r24
     2a8:	cc 0f       	add	r28, r28
     2aa:	dd 1f       	adc	r29, r29
     2ac:	c8 0f       	add	r28, r24
     2ae:	d9 1f       	adc	r29, r25
     2b0:	ce 01       	movw	r24, r28
     2b2:	01 96       	adiw	r24, 0x01	; 1
     2b4:	fc 01       	movw	r30, r24
     2b6:	e0 5a       	subi	r30, 0xA0	; 160
     2b8:	ff 4f       	sbci	r31, 0xFF	; 255
     2ba:	dc 01       	movw	r26, r24
     2bc:	ad 59       	subi	r26, 0x9D	; 157
     2be:	bf 4f       	sbci	r27, 0xFF	; 255
     2c0:	41 e0       	ldi	r20, 0x01	; 1
     2c2:	60 81       	ld	r22, Z
     2c4:	8c 91       	ld	r24, X
     2c6:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     2ca:	22 96       	adiw	r28, 0x02	; 2
     2cc:	fe 01       	movw	r30, r28
     2ce:	e0 5a       	subi	r30, 0xA0	; 160
     2d0:	ff 4f       	sbci	r31, 0xFF	; 255
     2d2:	cd 59       	subi	r28, 0x9D	; 157
     2d4:	df 4f       	sbci	r29, 0xFF	; 255
     2d6:	40 e0       	ldi	r20, 0x00	; 0
     2d8:	60 81       	ld	r22, Z
     2da:	88 81       	ld	r24, Y
     2dc:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     2e0:	1e c0       	rjmp	.+60     	; 0x31e <DCM_onControlSpeed+0xa4>
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	ec 01       	movw	r28, r24
     2e6:	cc 0f       	add	r28, r28
     2e8:	dd 1f       	adc	r29, r29
     2ea:	c8 0f       	add	r28, r24
     2ec:	d9 1f       	adc	r29, r25
     2ee:	ce 01       	movw	r24, r28
     2f0:	01 96       	adiw	r24, 0x01	; 1
     2f2:	fc 01       	movw	r30, r24
     2f4:	e0 5a       	subi	r30, 0xA0	; 160
     2f6:	ff 4f       	sbci	r31, 0xFF	; 255
     2f8:	dc 01       	movw	r26, r24
     2fa:	ad 59       	subi	r26, 0x9D	; 157
     2fc:	bf 4f       	sbci	r27, 0xFF	; 255
     2fe:	40 e0       	ldi	r20, 0x00	; 0
     300:	60 81       	ld	r22, Z
     302:	8c 91       	ld	r24, X
     304:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     308:	22 96       	adiw	r28, 0x02	; 2
     30a:	fe 01       	movw	r30, r28
     30c:	e0 5a       	subi	r30, 0xA0	; 160
     30e:	ff 4f       	sbci	r31, 0xFF	; 255
     310:	cd 59       	subi	r28, 0x9D	; 157
     312:	df 4f       	sbci	r29, 0xFF	; 255
     314:	41 e0       	ldi	r20, 0x01	; 1
     316:	60 81       	ld	r22, Z
     318:	88 81       	ld	r24, Y
     31a:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     31e:	61 2f       	mov	r22, r17
     320:	70 e0       	ldi	r23, 0x00	; 0
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__floatunsisf>
     32a:	25 e4       	ldi	r18, 0x45	; 69
     32c:	2f 93       	push	r18
     32e:	2c e9       	ldi	r18, 0x9C	; 156
     330:	2f 93       	push	r18
     332:	20 e4       	ldi	r18, 0x40	; 64
     334:	2f 93       	push	r18
     336:	1f 92       	push	r1
     338:	a1 2c       	mov	r10, r1
     33a:	b1 2c       	mov	r11, r1
     33c:	65 01       	movw	r12, r10
     33e:	e1 2c       	mov	r14, r1
     340:	f1 2c       	mov	r15, r1
     342:	08 ec       	ldi	r16, 0xC8	; 200
     344:	12 e4       	ldi	r17, 0x42	; 66
     346:	a6 01       	movw	r20, r12
     348:	95 01       	movw	r18, r10
     34a:	0e 94 57 06 	call	0xcae	; 0xcae <MAP>
     34e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__fixunssfsi>
     352:	cb 01       	movw	r24, r22
     354:	0e 94 4f 06 	call	0xc9e	; 0xc9e <TMR1_writeComparingValueB>
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	80 e0       	ldi	r24, 0x00	; 0
     362:	05 c0       	rjmp	.+10     	; 0x36e <DCM_onControlSpeed+0xf4>
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	03 c0       	rjmp	.+6      	; 0x36e <DCM_onControlSpeed+0xf4>
     368:	83 e0       	ldi	r24, 0x03	; 3
     36a:	01 c0       	rjmp	.+2      	; 0x36e <DCM_onControlSpeed+0xf4>
     36c:	82 e0       	ldi	r24, 0x02	; 2
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	1f 91       	pop	r17
     374:	0f 91       	pop	r16
     376:	ff 90       	pop	r15
     378:	ef 90       	pop	r14
     37a:	df 90       	pop	r13
     37c:	cf 90       	pop	r12
     37e:	bf 90       	pop	r11
     380:	af 90       	pop	r10
     382:	08 95       	ret

00000384 <DCM_off>:
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	81 11       	cpse	r24, r1
     38a:	20 c0       	rjmp	.+64     	; 0x3cc <DCM_off+0x48>
     38c:	90 e0       	ldi	r25, 0x00	; 0
     38e:	ec 01       	movw	r28, r24
     390:	cc 0f       	add	r28, r28
     392:	dd 1f       	adc	r29, r29
     394:	c8 0f       	add	r28, r24
     396:	d9 1f       	adc	r29, r25
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	fc 01       	movw	r30, r24
     39e:	e0 5a       	subi	r30, 0xA0	; 160
     3a0:	ff 4f       	sbci	r31, 0xFF	; 255
     3a2:	dc 01       	movw	r26, r24
     3a4:	ad 59       	subi	r26, 0x9D	; 157
     3a6:	bf 4f       	sbci	r27, 0xFF	; 255
     3a8:	40 e0       	ldi	r20, 0x00	; 0
     3aa:	60 81       	ld	r22, Z
     3ac:	8c 91       	ld	r24, X
     3ae:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     3b2:	22 96       	adiw	r28, 0x02	; 2
     3b4:	fe 01       	movw	r30, r28
     3b6:	e0 5a       	subi	r30, 0xA0	; 160
     3b8:	ff 4f       	sbci	r31, 0xFF	; 255
     3ba:	cd 59       	subi	r28, 0x9D	; 157
     3bc:	df 4f       	sbci	r29, 0xFF	; 255
     3be:	40 e0       	ldi	r20, 0x00	; 0
     3c0:	60 81       	ld	r22, Z
     3c2:	88 81       	ld	r24, Y
     3c4:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     3c8:	80 e0       	ldi	r24, 0x00	; 0
     3ca:	01 c0       	rjmp	.+2      	; 0x3ce <DCM_off+0x4a>
     3cc:	81 e0       	ldi	r24, 0x01	; 1
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	08 95       	ret

000003d4 <LED_init>:
     3d4:	41 e0       	ldi	r20, 0x01	; 1
     3d6:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_setPinDirection>
     3da:	08 95       	ret

000003dc <LED_on>:
     3dc:	41 e0       	ldi	r20, 0x01	; 1
     3de:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     3e2:	08 95       	ret

000003e4 <LED_off>:
     3e4:	40 e0       	ldi	r20, 0x00	; 0
     3e6:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
     3ea:	08 95       	ret

000003ec <SERVO_init>:

/*************** APIS PROTOTYPES ***************/

void SERVO_init()
{
	u8 tickTime=TMR1_tickTimemicro();
     3ec:	0e 94 55 06 	call	0xcaa	; 0xcaa <TMR1_tickTimemicro>
	u16 topvalue=20000/tickTime;
     3f0:	68 2f       	mov	r22, r24
     3f2:	70 e0       	ldi	r23, 0x00	; 0
     3f4:	80 e2       	ldi	r24, 0x20	; 32
     3f6:	9e e4       	ldi	r25, 0x4E	; 78
     3f8:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__divmodhi4>
     3fc:	cb 01       	movw	r24, r22
	//TMR1_init(TMR1_FASTPWM_ICR1,TMR1_CLEAR_OC1);
	TMR1_writeCapturingValue(topvalue);
     3fe:	0e 94 52 06 	call	0xca4	; 0xca4 <TMR1_writeCapturingValue>
	DIO_setPinDirection(DIO_PORTD,DIO_PIN5,DIO_PIN_OUTPUT);
     402:	41 e0       	ldi	r20, 0x01	; 1
     404:	65 e0       	ldi	r22, 0x05	; 5
     406:	83 e0       	ldi	r24, 0x03	; 3
     408:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_setPinDirection>
     40c:	08 95       	ret

0000040e <SERVO_angle>:
}
void SERVO_angle(u8 ServoType,s8 angle)
{
     40e:	4f 92       	push	r4
     410:	5f 92       	push	r5
     412:	6f 92       	push	r6
     414:	7f 92       	push	r7
     416:	af 92       	push	r10
     418:	bf 92       	push	r11
     41a:	cf 92       	push	r12
     41c:	df 92       	push	r13
     41e:	ef 92       	push	r14
     420:	ff 92       	push	r15
     422:	0f 93       	push	r16
     424:	1f 93       	push	r17
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	cd b7       	in	r28, 0x3d	; 61
     42c:	de b7       	in	r29, 0x3e	; 62
     42e:	2a 97       	sbiw	r28, 0x0a	; 10
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	f8 94       	cli
     434:	de bf       	out	0x3e, r29	; 62
     436:	0f be       	out	0x3f, r0	; 63
     438:	cd bf       	out	0x3d, r28	; 61
	if (ServoType < 2)
     43a:	82 30       	cpi	r24, 0x02	; 2
     43c:	08 f0       	brcs	.+2      	; 0x440 <SERVO_angle+0x32>
     43e:	65 c0       	rjmp	.+202    	; 0x50a <SERVO_angle+0xfc>
	{s8 minAngle  = 0,maxAngle = 180;
		switch (ServoType)
     440:	88 23       	and	r24, r24
     442:	19 f0       	breq	.+6      	; 0x44a <SERVO_angle+0x3c>
	DIO_setPinDirection(DIO_PORTD,DIO_PIN5,DIO_PIN_OUTPUT);
}
void SERVO_angle(u8 ServoType,s8 angle)
{
	if (ServoType < 2)
	{s8 minAngle  = 0,maxAngle = 180;
     444:	04 eb       	ldi	r16, 0xB4	; 180
     446:	10 e0       	ldi	r17, 0x00	; 0
     448:	02 c0       	rjmp	.+4      	; 0x44e <SERVO_angle+0x40>
		switch (ServoType)
		{
			case SERVO90  :
			minAngle = -90;
			maxAngle =  90;
     44a:	0a e5       	ldi	r16, 0x5A	; 90
	if (ServoType < 2)
	{s8 minAngle  = 0,maxAngle = 180;
		switch (ServoType)
		{
			case SERVO90  :
			minAngle = -90;
     44c:	16 ea       	ldi	r17, 0xA6	; 166
			case SERVO180 :
			minAngle = 0;
			maxAngle = 180;
			break;
		}
		 if (angle >= minAngle && angle <= maxAngle)
     44e:	61 17       	cp	r22, r17
     450:	0c f4       	brge	.+2      	; 0x454 <SERVO_angle+0x46>
     452:	5b c0       	rjmp	.+182    	; 0x50a <SERVO_angle+0xfc>
     454:	06 17       	cp	r16, r22
     456:	0c f4       	brge	.+2      	; 0x45a <SERVO_angle+0x4c>
     458:	58 c0       	rjmp	.+176    	; 0x50a <SERVO_angle+0xfc>
     45a:	76 2e       	mov	r7, r22
		 {
		 	u8 tickTime=TMR1_tickTimemicro();
     45c:	0e 94 55 06 	call	0xcaa	; 0xcaa <TMR1_tickTimemicro>
			 //from data sheet servo motor (1000 : 2000 )
			 //in Egypt servo motor  (750 : 2500 )
		 	u16 minTmrVal=1000/tickTime;
     460:	28 2f       	mov	r18, r24
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	88 ee       	ldi	r24, 0xE8	; 232
     466:	93 e0       	ldi	r25, 0x03	; 3
     468:	b9 01       	movw	r22, r18
     46a:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__divmodhi4>
     46e:	fb 01       	movw	r30, r22
		 	u16 maxTmrVal=2000/tickTime;
     470:	80 ed       	ldi	r24, 0xD0	; 208
     472:	97 e0       	ldi	r25, 0x07	; 7
     474:	b9 01       	movw	r22, r18
     476:	0e 94 d0 08 	call	0x11a0	; 0x11a0 <__divmodhi4>
     47a:	7a 87       	std	Y+10, r23	; 0x0a
     47c:	69 87       	std	Y+9, r22	; 0x09
		 	u16 TmrVal =MAP (angle,minAngle,maxAngle,minTmrVal,maxTmrVal);
     47e:	bf 01       	movw	r22, r30
     480:	80 e0       	ldi	r24, 0x00	; 0
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__floatunsisf>
     488:	5b 01       	movw	r10, r22
     48a:	6c 01       	movw	r12, r24
     48c:	60 2f       	mov	r22, r16
     48e:	00 0f       	add	r16, r16
     490:	77 0b       	sbc	r23, r23
     492:	88 0b       	sbc	r24, r24
     494:	99 0b       	sbc	r25, r25
     496:	0e 94 d7 07 	call	0xfae	; 0xfae <__floatsisf>
     49a:	69 83       	std	Y+1, r22	; 0x01
     49c:	7a 83       	std	Y+2, r23	; 0x02
     49e:	8b 83       	std	Y+3, r24	; 0x03
     4a0:	9c 83       	std	Y+4, r25	; 0x04
     4a2:	61 2f       	mov	r22, r17
     4a4:	11 0f       	add	r17, r17
     4a6:	77 0b       	sbc	r23, r23
     4a8:	88 0b       	sbc	r24, r24
     4aa:	99 0b       	sbc	r25, r25
     4ac:	0e 94 d7 07 	call	0xfae	; 0xfae <__floatsisf>
     4b0:	6d 83       	std	Y+5, r22	; 0x05
     4b2:	7e 83       	std	Y+6, r23	; 0x06
     4b4:	8f 83       	std	Y+7, r24	; 0x07
     4b6:	98 87       	std	Y+8, r25	; 0x08
     4b8:	67 2d       	mov	r22, r7
     4ba:	77 0c       	add	r7, r7
     4bc:	77 0b       	sbc	r23, r23
     4be:	88 0b       	sbc	r24, r24
     4c0:	99 0b       	sbc	r25, r25
     4c2:	0e 94 d7 07 	call	0xfae	; 0xfae <__floatsisf>
     4c6:	2b 01       	movw	r4, r22
     4c8:	3c 01       	movw	r6, r24
     4ca:	29 85       	ldd	r18, Y+9	; 0x09
     4cc:	3a 85       	ldd	r19, Y+10	; 0x0a
     4ce:	b9 01       	movw	r22, r18
     4d0:	80 e0       	ldi	r24, 0x00	; 0
     4d2:	90 e0       	ldi	r25, 0x00	; 0
     4d4:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__floatunsisf>
     4d8:	9f 93       	push	r25
     4da:	8f 93       	push	r24
     4dc:	7f 93       	push	r23
     4de:	6f 93       	push	r22
     4e0:	e9 80       	ldd	r14, Y+1	; 0x01
     4e2:	fa 80       	ldd	r15, Y+2	; 0x02
     4e4:	0b 81       	ldd	r16, Y+3	; 0x03
     4e6:	1c 81       	ldd	r17, Y+4	; 0x04
     4e8:	2d 81       	ldd	r18, Y+5	; 0x05
     4ea:	3e 81       	ldd	r19, Y+6	; 0x06
     4ec:	4f 81       	ldd	r20, Y+7	; 0x07
     4ee:	58 85       	ldd	r21, Y+8	; 0x08
     4f0:	c3 01       	movw	r24, r6
     4f2:	b2 01       	movw	r22, r4
     4f4:	0e 94 57 06 	call	0xcae	; 0xcae <MAP>
     4f8:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__fixunssfsi>
		 	TMR1_writeComparingValueA((u16)TmrVal);
     4fc:	cb 01       	movw	r24, r22
     4fe:	0e 94 4c 06 	call	0xc98	; 0xc98 <TMR1_writeComparingValueA>
     502:	0f 90       	pop	r0
     504:	0f 90       	pop	r0
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
		 //	TMR1_start();
		 }

	}
		
     50a:	2a 96       	adiw	r28, 0x0a	; 10
     50c:	0f b6       	in	r0, 0x3f	; 63
     50e:	f8 94       	cli
     510:	de bf       	out	0x3e, r29	; 62
     512:	0f be       	out	0x3f, r0	; 63
     514:	cd bf       	out	0x3d, r28	; 61
     516:	df 91       	pop	r29
     518:	cf 91       	pop	r28
     51a:	1f 91       	pop	r17
     51c:	0f 91       	pop	r16
     51e:	ff 90       	pop	r15
     520:	ef 90       	pop	r14
     522:	df 90       	pop	r13
     524:	cf 90       	pop	r12
     526:	bf 90       	pop	r11
     528:	af 90       	pop	r10
     52a:	7f 90       	pop	r7
     52c:	6f 90       	pop	r6
     52e:	5f 90       	pop	r5
     530:	4f 90       	pop	r4
     532:	08 95       	ret

00000534 <SEVEN_SEGMENT_BCD_init>:
extern u8 SEVEN_SEGMENT_BCD_DataPins [SEVEN_SEGMENT_BCD_NUM*4];


/*************** APIS ***************/
SEVEN_SEGMENT_BCDStatus_t SEVEN_SEGMENT_BCD_init(u8 SEVEN_SEGMENTId,u8 dipstatus)
{u8 SEVEN_SEGMENT_BCD_counter=0;
     534:	0f 93       	push	r16
     536:	1f 93       	push	r17
     538:	cf 93       	push	r28
     53a:	df 93       	push	r29
	if (SEVEN_SEGMENTId < SEVEN_SEGMENT_BCD_NUM)
     53c:	82 30       	cpi	r24, 0x02	; 2
     53e:	c0 f5       	brcc	.+112    	; 0x5b0 <SEVEN_SEGMENT_BCD_init+0x7c>
     540:	d6 2f       	mov	r29, r22
     542:	c8 2f       	mov	r28, r24
	{
		//enable 7-segment
		DIO_setPinDirection(SEVEN_SEGMENT_BCD_ENport[SEVEN_SEGMENTId],SEVEN_SEGMENT_BCD_ENpin[SEVEN_SEGMENTId],DIO_PIN_OUTPUT);
     544:	08 2f       	mov	r16, r24
     546:	10 e0       	ldi	r17, 0x00	; 0
     548:	d8 01       	movw	r26, r16
     54a:	ae 58       	subi	r26, 0x8E	; 142
     54c:	bf 4f       	sbci	r27, 0xFF	; 255
     54e:	f8 01       	movw	r30, r16
     550:	ec 58       	subi	r30, 0x8C	; 140
     552:	ff 4f       	sbci	r31, 0xFF	; 255
     554:	41 e0       	ldi	r20, 0x01	; 1
     556:	6c 91       	ld	r22, X
     558:	80 81       	ld	r24, Z
     55a:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_setPinDirection>
		if (dipstatus== dipused)
     55e:	d1 30       	cpi	r29, 0x01	; 1
     560:	59 f4       	brne	.+22     	; 0x578 <SEVEN_SEGMENT_BCD_init+0x44>
		{
			//enable DIP LED
			DIO_setPinDirection(SEVEN_SEGMENT_BCD_DPport[SEVEN_SEGMENTId],SEVEN_SEGMENT_BCD_DPpin[SEVEN_SEGMENTId],DIO_PIN_OUTPUT);
     562:	41 e0       	ldi	r20, 0x01	; 1
     564:	f8 01       	movw	r30, r16
     566:	e2 59       	subi	r30, 0x92	; 146
     568:	ff 4f       	sbci	r31, 0xFF	; 255
     56a:	60 81       	ld	r22, Z
     56c:	f8 01       	movw	r30, r16
     56e:	e0 59       	subi	r30, 0x90	; 144
     570:	ff 4f       	sbci	r31, 0xFF	; 255
     572:	80 81       	ld	r24, Z
     574:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_setPinDirection>
		}else
		{
			//do nothing
		}
		//enable 7-segment data LEDs
		for (SEVEN_SEGMENT_BCD_counter=(SEVEN_SEGMENTId*4);SEVEN_SEGMENT_BCD_counter<((SEVEN_SEGMENTId+1)*4);SEVEN_SEGMENT_BCD_counter++)
     578:	cc 0f       	add	r28, r28
     57a:	cc 0f       	add	r28, r28
     57c:	0c c0       	rjmp	.+24     	; 0x596 <SEVEN_SEGMENT_BCD_init+0x62>
		{
			DIO_setPinDirection(SEVEN_SEGMENT_BCD_DataPort[SEVEN_SEGMENT_BCD_counter],SEVEN_SEGMENT_BCD_DataPins[SEVEN_SEGMENT_BCD_counter],DIO_PIN_OUTPUT);
     57e:	f9 01       	movw	r30, r18
     580:	ea 59       	subi	r30, 0x9A	; 154
     582:	ff 4f       	sbci	r31, 0xFF	; 255
     584:	d9 01       	movw	r26, r18
     586:	aa 58       	subi	r26, 0x8A	; 138
     588:	bf 4f       	sbci	r27, 0xFF	; 255
     58a:	41 e0       	ldi	r20, 0x01	; 1
     58c:	60 81       	ld	r22, Z
     58e:	8c 91       	ld	r24, X
     590:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_setPinDirection>
		}else
		{
			//do nothing
		}
		//enable 7-segment data LEDs
		for (SEVEN_SEGMENT_BCD_counter=(SEVEN_SEGMENTId*4);SEVEN_SEGMENT_BCD_counter<((SEVEN_SEGMENTId+1)*4);SEVEN_SEGMENT_BCD_counter++)
     594:	cf 5f       	subi	r28, 0xFF	; 255
     596:	2c 2f       	mov	r18, r28
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	c8 01       	movw	r24, r16
     59c:	01 96       	adiw	r24, 0x01	; 1
     59e:	88 0f       	add	r24, r24
     5a0:	99 1f       	adc	r25, r25
     5a2:	88 0f       	add	r24, r24
     5a4:	99 1f       	adc	r25, r25
     5a6:	28 17       	cp	r18, r24
     5a8:	39 07       	cpc	r19, r25
     5aa:	4c f3       	brlt	.-46     	; 0x57e <SEVEN_SEGMENT_BCD_init+0x4a>
		}
	}else
	{
		return SEVEN_SEGMENT_BCDIdError;
	}
	return SEVEN_SEGMENT_BCDNoError;
     5ac:	80 e0       	ldi	r24, 0x00	; 0
     5ae:	01 c0       	rjmp	.+2      	; 0x5b2 <SEVEN_SEGMENT_BCD_init+0x7e>
		{
			DIO_setPinDirection(SEVEN_SEGMENT_BCD_DataPort[SEVEN_SEGMENT_BCD_counter],SEVEN_SEGMENT_BCD_DataPins[SEVEN_SEGMENT_BCD_counter],DIO_PIN_OUTPUT);
		}
	}else
	{
		return SEVEN_SEGMENT_BCDIdError;
     5b0:	81 e0       	ldi	r24, 0x01	; 1
	}
	return SEVEN_SEGMENT_BCDNoError;
}
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	1f 91       	pop	r17
     5b8:	0f 91       	pop	r16
     5ba:	08 95       	ret

000005bc <SEVEN_SEGMENT_BCD_write>:
SEVEN_SEGMENT_BCDStatus_t SEVEN_SEGMENT_BCD_write(u8 SEVEN_SEGMENTId,u8 data)
{u8 SEVEN_SEGMENT_BCD_counter;
     5bc:	0f 93       	push	r16
     5be:	1f 93       	push	r17
     5c0:	cf 93       	push	r28
     5c2:	df 93       	push	r29
	if (SEVEN_SEGMENTId < SEVEN_SEGMENT_BCD_NUM)
     5c4:	82 30       	cpi	r24, 0x02	; 2
     5c6:	98 f5       	brcc	.+102    	; 0x62e <SEVEN_SEGMENT_BCD_write+0x72>
     5c8:	06 2f       	mov	r16, r22
     5ca:	18 2f       	mov	r17, r24
			DIO_setPinValue(SEVEN_SEGMENT_BCD_DataPort[SEVEN_SEGMENT_BCD_counter],SEVEN_SEGMENT_BCD_DataPins[SEVEN_SEGMENT_BCD_counter],GET_BIT(data,SEVEN_SEGMENT_BCD_counter));
		}
		
		#elif SEVEN_SEGMENT_BCD_TYPE == ANODE_SEVEN_SEGMENT
		//enable 7-segment
		DIO_setPinValue(SEVEN_SEGMENT_BCD_ENport[SEVEN_SEGMENTId],SEVEN_SEGMENT_BCD_ENpin[SEVEN_SEGMENTId],DIO_PIN_HIGH);
     5cc:	c8 2f       	mov	r28, r24
     5ce:	d0 e0       	ldi	r29, 0x00	; 0
     5d0:	de 01       	movw	r26, r28
     5d2:	ae 58       	subi	r26, 0x8E	; 142
     5d4:	bf 4f       	sbci	r27, 0xFF	; 255
     5d6:	fe 01       	movw	r30, r28
     5d8:	ec 58       	subi	r30, 0x8C	; 140
     5da:	ff 4f       	sbci	r31, 0xFF	; 255
     5dc:	41 e0       	ldi	r20, 0x01	; 1
     5de:	6c 91       	ld	r22, X
     5e0:	80 81       	ld	r24, Z
     5e2:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
		for (SEVEN_SEGMENT_BCD_counter=(SEVEN_SEGMENTId*4);SEVEN_SEGMENT_BCD_counter<((SEVEN_SEGMENTId+1)*4);SEVEN_SEGMENT_BCD_counter++)
     5e6:	11 0f       	add	r17, r17
     5e8:	11 0f       	add	r17, r17
     5ea:	14 c0       	rjmp	.+40     	; 0x614 <SEVEN_SEGMENT_BCD_write+0x58>
		{
			DIO_setPinValue(SEVEN_SEGMENT_BCD_DataPort[SEVEN_SEGMENT_BCD_counter],SEVEN_SEGMENT_BCD_DataPins[SEVEN_SEGMENT_BCD_counter],GET_BIT(data,SEVEN_SEGMENT_BCD_counter));
     5ec:	40 2f       	mov	r20, r16
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	01 2e       	mov	r0, r17
     5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <SEVEN_SEGMENT_BCD_write+0x3c>
     5f4:	55 95       	asr	r21
     5f6:	47 95       	ror	r20
     5f8:	0a 94       	dec	r0
     5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <SEVEN_SEGMENT_BCD_write+0x38>
     5fc:	41 70       	andi	r20, 0x01	; 1
     5fe:	f9 01       	movw	r30, r18
     600:	ea 59       	subi	r30, 0x9A	; 154
     602:	ff 4f       	sbci	r31, 0xFF	; 255
     604:	d9 01       	movw	r26, r18
     606:	aa 58       	subi	r26, 0x8A	; 138
     608:	bf 4f       	sbci	r27, 0xFF	; 255
     60a:	60 81       	ld	r22, Z
     60c:	8c 91       	ld	r24, X
     60e:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
		}
		
		#elif SEVEN_SEGMENT_BCD_TYPE == ANODE_SEVEN_SEGMENT
		//enable 7-segment
		DIO_setPinValue(SEVEN_SEGMENT_BCD_ENport[SEVEN_SEGMENTId],SEVEN_SEGMENT_BCD_ENpin[SEVEN_SEGMENTId],DIO_PIN_HIGH);
		for (SEVEN_SEGMENT_BCD_counter=(SEVEN_SEGMENTId*4);SEVEN_SEGMENT_BCD_counter<((SEVEN_SEGMENTId+1)*4);SEVEN_SEGMENT_BCD_counter++)
     612:	1f 5f       	subi	r17, 0xFF	; 255
     614:	21 2f       	mov	r18, r17
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	ce 01       	movw	r24, r28
     61a:	01 96       	adiw	r24, 0x01	; 1
     61c:	88 0f       	add	r24, r24
     61e:	99 1f       	adc	r25, r25
     620:	88 0f       	add	r24, r24
     622:	99 1f       	adc	r25, r25
     624:	28 17       	cp	r18, r24
     626:	39 07       	cpc	r19, r25
     628:	0c f3       	brlt	.-62     	; 0x5ec <SEVEN_SEGMENT_BCD_write+0x30>
		#endif
	}else
	{
		return SEVEN_SEGMENT_BCDIdError;
	}
	return SEVEN_SEGMENT_BCDNoError;
     62a:	80 e0       	ldi	r24, 0x00	; 0
     62c:	01 c0       	rjmp	.+2      	; 0x630 <SEVEN_SEGMENT_BCD_write+0x74>
			DIO_setPinValue(SEVEN_SEGMENT_BCD_DataPort[SEVEN_SEGMENT_BCD_counter],SEVEN_SEGMENT_BCD_DataPins[SEVEN_SEGMENT_BCD_counter],GET_BIT(data,SEVEN_SEGMENT_BCD_counter));
		}
		#endif
	}else
	{
		return SEVEN_SEGMENT_BCDIdError;
     62e:	81 e0       	ldi	r24, 0x01	; 1
	}
	return SEVEN_SEGMENT_BCDNoError;
}
     630:	df 91       	pop	r29
     632:	cf 91       	pop	r28
     634:	1f 91       	pop	r17
     636:	0f 91       	pop	r16
     638:	08 95       	ret

0000063a <SEVEN_SEGMENT_BCD_off>:
SEVEN_SEGMENT_BCDStatus_t SEVEN_SEGMENT_BCD_off(u8 SEVEN_SEGMENTId)
{
	if (SEVEN_SEGMENTId < SEVEN_SEGMENT_BCD_NUM)
     63a:	82 30       	cpi	r24, 0x02	; 2
     63c:	70 f4       	brcc	.+28     	; 0x65a <SEVEN_SEGMENT_BCD_off+0x20>
		#if   SEVEN_SEGMENT_BCD_TYPE == CATHODE_SEVEN_SEGMENT
		//disable 7-segment
		DIO_setPinValue(SEVEN_SEGMENT_BCD_ENport[SEVEN_SEGMENTId],SEVEN_SEGMENT_BCD_ENpin[SEVEN_SEGMENTId],DIO_PIN_HIGH);
		#elif SEVEN_SEGMENT_BCD_TYPE == ANODE_SEVEN_SEGMENT
		//disable 7-segment
		DIO_setPinValue(SEVEN_SEGMENT_BCD_ENport[SEVEN_SEGMENTId],SEVEN_SEGMENT_BCD_ENpin[SEVEN_SEGMENTId],DIO_PIN_LOW);
     63e:	90 e0       	ldi	r25, 0x00	; 0
     640:	fc 01       	movw	r30, r24
     642:	ee 58       	subi	r30, 0x8E	; 142
     644:	ff 4f       	sbci	r31, 0xFF	; 255
     646:	dc 01       	movw	r26, r24
     648:	ac 58       	subi	r26, 0x8C	; 140
     64a:	bf 4f       	sbci	r27, 0xFF	; 255
     64c:	40 e0       	ldi	r20, 0x00	; 0
     64e:	60 81       	ld	r22, Z
     650:	8c 91       	ld	r24, X
     652:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_setPinValue>
		#endif
	}else
	{
		return SEVEN_SEGMENT_BCDIdError;
	}
	return SEVEN_SEGMENT_BCDNoError;
     656:	80 e0       	ldi	r24, 0x00	; 0
     658:	08 95       	ret
		//disable 7-segment
		DIO_setPinValue(SEVEN_SEGMENT_BCD_ENport[SEVEN_SEGMENTId],SEVEN_SEGMENT_BCD_ENpin[SEVEN_SEGMENTId],DIO_PIN_LOW);
		#endif
	}else
	{
		return SEVEN_SEGMENT_BCDIdError;
     65a:	81 e0       	ldi	r24, 0x01	; 1
	}
	return SEVEN_SEGMENT_BCDNoError;
}
     65c:	08 95       	ret

0000065e <SW_init>:
     65e:	40 e0       	ldi	r20, 0x00	; 0
     660:	0e 94 3c 03 	call	0x678	; 0x678 <DIO_setPinDirection>
     664:	08 95       	ret

00000666 <SW_getSwitchPinValue>:
     666:	0e 94 48 04 	call	0x890	; 0x890 <DIO_getPinValue>
     66a:	08 95       	ret

0000066c <TMR1_HAL_init>:
     66c:	0e 94 2b 05 	call	0xa56	; 0xa56 <TMR1_init>
     670:	08 95       	ret

00000672 <TMR1_HAL_start>:
     672:	0e 94 48 06 	call	0xc90	; 0xc90 <TMR1_start>
     676:	08 95       	ret

00000678 <DIO_setPinDirection>:
     678:	84 30       	cpi	r24, 0x04	; 4
     67a:	08 f0       	brcs	.+2      	; 0x67e <DIO_setPinDirection+0x6>
     67c:	7b c0       	rjmp	.+246    	; 0x774 <DIO_setPinDirection+0xfc>
     67e:	68 30       	cpi	r22, 0x08	; 8
     680:	08 f0       	brcs	.+2      	; 0x684 <DIO_setPinDirection+0xc>
     682:	7a c0       	rjmp	.+244    	; 0x778 <DIO_setPinDirection+0x100>
     684:	42 30       	cpi	r20, 0x02	; 2
     686:	08 f0       	brcs	.+2      	; 0x68a <DIO_setPinDirection+0x12>
     688:	79 c0       	rjmp	.+242    	; 0x77c <DIO_setPinDirection+0x104>
     68a:	81 30       	cpi	r24, 0x01	; 1
     68c:	11 f1       	breq	.+68     	; 0x6d2 <DIO_setPinDirection+0x5a>
     68e:	30 f0       	brcs	.+12     	; 0x69c <DIO_setPinDirection+0x24>
     690:	82 30       	cpi	r24, 0x02	; 2
     692:	d1 f1       	breq	.+116    	; 0x708 <DIO_setPinDirection+0x90>
     694:	83 30       	cpi	r24, 0x03	; 3
     696:	09 f4       	brne	.+2      	; 0x69a <DIO_setPinDirection+0x22>
     698:	52 c0       	rjmp	.+164    	; 0x73e <DIO_setPinDirection+0xc6>
     69a:	72 c0       	rjmp	.+228    	; 0x780 <DIO_setPinDirection+0x108>
     69c:	41 30       	cpi	r20, 0x01	; 1
     69e:	61 f4       	brne	.+24     	; 0x6b8 <DIO_setPinDirection+0x40>
     6a0:	2a b3       	in	r18, 0x1a	; 26
     6a2:	81 e0       	ldi	r24, 0x01	; 1
     6a4:	90 e0       	ldi	r25, 0x00	; 0
     6a6:	02 c0       	rjmp	.+4      	; 0x6ac <DIO_setPinDirection+0x34>
     6a8:	88 0f       	add	r24, r24
     6aa:	99 1f       	adc	r25, r25
     6ac:	6a 95       	dec	r22
     6ae:	e2 f7       	brpl	.-8      	; 0x6a8 <DIO_setPinDirection+0x30>
     6b0:	82 2b       	or	r24, r18
     6b2:	8a bb       	out	0x1a, r24	; 26
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	08 95       	ret
     6b8:	2a b3       	in	r18, 0x1a	; 26
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <DIO_setPinDirection+0x4c>
     6c0:	88 0f       	add	r24, r24
     6c2:	99 1f       	adc	r25, r25
     6c4:	6a 95       	dec	r22
     6c6:	e2 f7       	brpl	.-8      	; 0x6c0 <DIO_setPinDirection+0x48>
     6c8:	80 95       	com	r24
     6ca:	82 23       	and	r24, r18
     6cc:	8a bb       	out	0x1a, r24	; 26
     6ce:	80 e0       	ldi	r24, 0x00	; 0
     6d0:	08 95       	ret
     6d2:	41 30       	cpi	r20, 0x01	; 1
     6d4:	61 f4       	brne	.+24     	; 0x6ee <DIO_setPinDirection+0x76>
     6d6:	27 b3       	in	r18, 0x17	; 23
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <DIO_setPinDirection+0x6a>
     6de:	88 0f       	add	r24, r24
     6e0:	99 1f       	adc	r25, r25
     6e2:	6a 95       	dec	r22
     6e4:	e2 f7       	brpl	.-8      	; 0x6de <DIO_setPinDirection+0x66>
     6e6:	82 2b       	or	r24, r18
     6e8:	87 bb       	out	0x17, r24	; 23
     6ea:	80 e0       	ldi	r24, 0x00	; 0
     6ec:	08 95       	ret
     6ee:	27 b3       	in	r18, 0x17	; 23
     6f0:	81 e0       	ldi	r24, 0x01	; 1
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	02 c0       	rjmp	.+4      	; 0x6fa <DIO_setPinDirection+0x82>
     6f6:	88 0f       	add	r24, r24
     6f8:	99 1f       	adc	r25, r25
     6fa:	6a 95       	dec	r22
     6fc:	e2 f7       	brpl	.-8      	; 0x6f6 <DIO_setPinDirection+0x7e>
     6fe:	80 95       	com	r24
     700:	82 23       	and	r24, r18
     702:	87 bb       	out	0x17, r24	; 23
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	08 95       	ret
     708:	41 30       	cpi	r20, 0x01	; 1
     70a:	61 f4       	brne	.+24     	; 0x724 <DIO_setPinDirection+0xac>
     70c:	24 b3       	in	r18, 0x14	; 20
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	02 c0       	rjmp	.+4      	; 0x718 <DIO_setPinDirection+0xa0>
     714:	88 0f       	add	r24, r24
     716:	99 1f       	adc	r25, r25
     718:	6a 95       	dec	r22
     71a:	e2 f7       	brpl	.-8      	; 0x714 <DIO_setPinDirection+0x9c>
     71c:	82 2b       	or	r24, r18
     71e:	84 bb       	out	0x14, r24	; 20
     720:	80 e0       	ldi	r24, 0x00	; 0
     722:	08 95       	ret
     724:	24 b3       	in	r18, 0x14	; 20
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	02 c0       	rjmp	.+4      	; 0x730 <DIO_setPinDirection+0xb8>
     72c:	88 0f       	add	r24, r24
     72e:	99 1f       	adc	r25, r25
     730:	6a 95       	dec	r22
     732:	e2 f7       	brpl	.-8      	; 0x72c <DIO_setPinDirection+0xb4>
     734:	80 95       	com	r24
     736:	82 23       	and	r24, r18
     738:	84 bb       	out	0x14, r24	; 20
     73a:	80 e0       	ldi	r24, 0x00	; 0
     73c:	08 95       	ret
     73e:	41 30       	cpi	r20, 0x01	; 1
     740:	61 f4       	brne	.+24     	; 0x75a <DIO_setPinDirection+0xe2>
     742:	21 b3       	in	r18, 0x11	; 17
     744:	81 e0       	ldi	r24, 0x01	; 1
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	02 c0       	rjmp	.+4      	; 0x74e <DIO_setPinDirection+0xd6>
     74a:	88 0f       	add	r24, r24
     74c:	99 1f       	adc	r25, r25
     74e:	6a 95       	dec	r22
     750:	e2 f7       	brpl	.-8      	; 0x74a <DIO_setPinDirection+0xd2>
     752:	82 2b       	or	r24, r18
     754:	81 bb       	out	0x11, r24	; 17
     756:	80 e0       	ldi	r24, 0x00	; 0
     758:	08 95       	ret
     75a:	21 b3       	in	r18, 0x11	; 17
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	02 c0       	rjmp	.+4      	; 0x766 <DIO_setPinDirection+0xee>
     762:	88 0f       	add	r24, r24
     764:	99 1f       	adc	r25, r25
     766:	6a 95       	dec	r22
     768:	e2 f7       	brpl	.-8      	; 0x762 <DIO_setPinDirection+0xea>
     76a:	80 95       	com	r24
     76c:	82 23       	and	r24, r18
     76e:	81 bb       	out	0x11, r24	; 17
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	08 95       	ret
     774:	84 e0       	ldi	r24, 0x04	; 4
     776:	08 95       	ret
     778:	81 e0       	ldi	r24, 0x01	; 1
     77a:	08 95       	ret
     77c:	82 e0       	ldi	r24, 0x02	; 2
     77e:	08 95       	ret
     780:	80 e0       	ldi	r24, 0x00	; 0
     782:	08 95       	ret

00000784 <DIO_setPinValue>:
     784:	84 30       	cpi	r24, 0x04	; 4
     786:	08 f0       	brcs	.+2      	; 0x78a <DIO_setPinValue+0x6>
     788:	7b c0       	rjmp	.+246    	; 0x880 <__stack+0x21>
     78a:	68 30       	cpi	r22, 0x08	; 8
     78c:	08 f0       	brcs	.+2      	; 0x790 <DIO_setPinValue+0xc>
     78e:	7a c0       	rjmp	.+244    	; 0x884 <__stack+0x25>
     790:	42 30       	cpi	r20, 0x02	; 2
     792:	08 f0       	brcs	.+2      	; 0x796 <DIO_setPinValue+0x12>
     794:	79 c0       	rjmp	.+242    	; 0x888 <__stack+0x29>
     796:	81 30       	cpi	r24, 0x01	; 1
     798:	11 f1       	breq	.+68     	; 0x7de <DIO_setPinValue+0x5a>
     79a:	30 f0       	brcs	.+12     	; 0x7a8 <DIO_setPinValue+0x24>
     79c:	82 30       	cpi	r24, 0x02	; 2
     79e:	d1 f1       	breq	.+116    	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     7a0:	83 30       	cpi	r24, 0x03	; 3
     7a2:	09 f4       	brne	.+2      	; 0x7a6 <DIO_setPinValue+0x22>
     7a4:	52 c0       	rjmp	.+164    	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     7a6:	72 c0       	rjmp	.+228    	; 0x88c <__stack+0x2d>
     7a8:	41 30       	cpi	r20, 0x01	; 1
     7aa:	61 f4       	brne	.+24     	; 0x7c4 <DIO_setPinValue+0x40>
     7ac:	2b b3       	in	r18, 0x1b	; 27
     7ae:	81 e0       	ldi	r24, 0x01	; 1
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	02 c0       	rjmp	.+4      	; 0x7b8 <DIO_setPinValue+0x34>
     7b4:	88 0f       	add	r24, r24
     7b6:	99 1f       	adc	r25, r25
     7b8:	6a 95       	dec	r22
     7ba:	e2 f7       	brpl	.-8      	; 0x7b4 <DIO_setPinValue+0x30>
     7bc:	82 2b       	or	r24, r18
     7be:	8b bb       	out	0x1b, r24	; 27
     7c0:	80 e0       	ldi	r24, 0x00	; 0
     7c2:	08 95       	ret
     7c4:	2b b3       	in	r18, 0x1b	; 27
     7c6:	81 e0       	ldi	r24, 0x01	; 1
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <DIO_setPinValue+0x4c>
     7cc:	88 0f       	add	r24, r24
     7ce:	99 1f       	adc	r25, r25
     7d0:	6a 95       	dec	r22
     7d2:	e2 f7       	brpl	.-8      	; 0x7cc <DIO_setPinValue+0x48>
     7d4:	80 95       	com	r24
     7d6:	82 23       	and	r24, r18
     7d8:	8b bb       	out	0x1b, r24	; 27
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	08 95       	ret
     7de:	41 30       	cpi	r20, 0x01	; 1
     7e0:	61 f4       	brne	.+24     	; 0x7fa <DIO_setPinValue+0x76>
     7e2:	28 b3       	in	r18, 0x18	; 24
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	02 c0       	rjmp	.+4      	; 0x7ee <DIO_setPinValue+0x6a>
     7ea:	88 0f       	add	r24, r24
     7ec:	99 1f       	adc	r25, r25
     7ee:	6a 95       	dec	r22
     7f0:	e2 f7       	brpl	.-8      	; 0x7ea <DIO_setPinValue+0x66>
     7f2:	82 2b       	or	r24, r18
     7f4:	88 bb       	out	0x18, r24	; 24
     7f6:	80 e0       	ldi	r24, 0x00	; 0
     7f8:	08 95       	ret
     7fa:	28 b3       	in	r18, 0x18	; 24
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	02 c0       	rjmp	.+4      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     802:	88 0f       	add	r24, r24
     804:	99 1f       	adc	r25, r25
     806:	6a 95       	dec	r22
     808:	e2 f7       	brpl	.-8      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
     80a:	80 95       	com	r24
     80c:	82 23       	and	r24, r18
     80e:	88 bb       	out	0x18, r24	; 24
     810:	80 e0       	ldi	r24, 0x00	; 0
     812:	08 95       	ret
     814:	41 30       	cpi	r20, 0x01	; 1
     816:	61 f4       	brne	.+24     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     818:	25 b3       	in	r18, 0x15	; 21
     81a:	81 e0       	ldi	r24, 0x01	; 1
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	02 c0       	rjmp	.+4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     820:	88 0f       	add	r24, r24
     822:	99 1f       	adc	r25, r25
     824:	6a 95       	dec	r22
     826:	e2 f7       	brpl	.-8      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
     828:	82 2b       	or	r24, r18
     82a:	85 bb       	out	0x15, r24	; 21
     82c:	80 e0       	ldi	r24, 0x00	; 0
     82e:	08 95       	ret
     830:	25 b3       	in	r18, 0x15	; 21
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	02 c0       	rjmp	.+4      	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     838:	88 0f       	add	r24, r24
     83a:	99 1f       	adc	r25, r25
     83c:	6a 95       	dec	r22
     83e:	e2 f7       	brpl	.-8      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
     840:	80 95       	com	r24
     842:	82 23       	and	r24, r18
     844:	85 bb       	out	0x15, r24	; 21
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	08 95       	ret
     84a:	41 30       	cpi	r20, 0x01	; 1
     84c:	61 f4       	brne	.+24     	; 0x866 <__stack+0x7>
     84e:	22 b3       	in	r18, 0x12	; 18
     850:	81 e0       	ldi	r24, 0x01	; 1
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	02 c0       	rjmp	.+4      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     856:	88 0f       	add	r24, r24
     858:	99 1f       	adc	r25, r25
     85a:	6a 95       	dec	r22
     85c:	e2 f7       	brpl	.-8      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     85e:	82 2b       	or	r24, r18
     860:	82 bb       	out	0x12, r24	; 18
     862:	80 e0       	ldi	r24, 0x00	; 0
     864:	08 95       	ret
     866:	22 b3       	in	r18, 0x12	; 18
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	02 c0       	rjmp	.+4      	; 0x872 <__stack+0x13>
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	6a 95       	dec	r22
     874:	e2 f7       	brpl	.-8      	; 0x86e <__stack+0xf>
     876:	80 95       	com	r24
     878:	82 23       	and	r24, r18
     87a:	82 bb       	out	0x12, r24	; 18
     87c:	80 e0       	ldi	r24, 0x00	; 0
     87e:	08 95       	ret
     880:	84 e0       	ldi	r24, 0x04	; 4
     882:	08 95       	ret
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	08 95       	ret
     888:	83 e0       	ldi	r24, 0x03	; 3
     88a:	08 95       	ret
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	08 95       	ret

00000890 <DIO_getPinValue>:
     890:	84 30       	cpi	r24, 0x04	; 4
     892:	e8 f5       	brcc	.+122    	; 0x90e <DIO_getPinValue+0x7e>
     894:	68 30       	cpi	r22, 0x08	; 8
     896:	e8 f5       	brcc	.+122    	; 0x912 <DIO_getPinValue+0x82>
     898:	41 15       	cp	r20, r1
     89a:	51 05       	cpc	r21, r1
     89c:	e1 f1       	breq	.+120    	; 0x916 <DIO_getPinValue+0x86>
     89e:	81 30       	cpi	r24, 0x01	; 1
     8a0:	91 f0       	breq	.+36     	; 0x8c6 <DIO_getPinValue+0x36>
     8a2:	28 f0       	brcs	.+10     	; 0x8ae <DIO_getPinValue+0x1e>
     8a4:	82 30       	cpi	r24, 0x02	; 2
     8a6:	d9 f0       	breq	.+54     	; 0x8de <DIO_getPinValue+0x4e>
     8a8:	83 30       	cpi	r24, 0x03	; 3
     8aa:	29 f1       	breq	.+74     	; 0x8f6 <DIO_getPinValue+0x66>
     8ac:	36 c0       	rjmp	.+108    	; 0x91a <DIO_getPinValue+0x8a>
     8ae:	89 b3       	in	r24, 0x19	; 25
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	02 c0       	rjmp	.+4      	; 0x8b8 <DIO_getPinValue+0x28>
     8b4:	95 95       	asr	r25
     8b6:	87 95       	ror	r24
     8b8:	6a 95       	dec	r22
     8ba:	e2 f7       	brpl	.-8      	; 0x8b4 <DIO_getPinValue+0x24>
     8bc:	81 70       	andi	r24, 0x01	; 1
     8be:	fa 01       	movw	r30, r20
     8c0:	80 83       	st	Z, r24
     8c2:	80 e0       	ldi	r24, 0x00	; 0
     8c4:	08 95       	ret
     8c6:	86 b3       	in	r24, 0x16	; 22
     8c8:	90 e0       	ldi	r25, 0x00	; 0
     8ca:	02 c0       	rjmp	.+4      	; 0x8d0 <DIO_getPinValue+0x40>
     8cc:	95 95       	asr	r25
     8ce:	87 95       	ror	r24
     8d0:	6a 95       	dec	r22
     8d2:	e2 f7       	brpl	.-8      	; 0x8cc <DIO_getPinValue+0x3c>
     8d4:	81 70       	andi	r24, 0x01	; 1
     8d6:	fa 01       	movw	r30, r20
     8d8:	80 83       	st	Z, r24
     8da:	80 e0       	ldi	r24, 0x00	; 0
     8dc:	08 95       	ret
     8de:	83 b3       	in	r24, 0x13	; 19
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	02 c0       	rjmp	.+4      	; 0x8e8 <DIO_getPinValue+0x58>
     8e4:	95 95       	asr	r25
     8e6:	87 95       	ror	r24
     8e8:	6a 95       	dec	r22
     8ea:	e2 f7       	brpl	.-8      	; 0x8e4 <DIO_getPinValue+0x54>
     8ec:	81 70       	andi	r24, 0x01	; 1
     8ee:	fa 01       	movw	r30, r20
     8f0:	80 83       	st	Z, r24
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	08 95       	ret
     8f6:	80 b3       	in	r24, 0x10	; 16
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	02 c0       	rjmp	.+4      	; 0x900 <DIO_getPinValue+0x70>
     8fc:	95 95       	asr	r25
     8fe:	87 95       	ror	r24
     900:	6a 95       	dec	r22
     902:	e2 f7       	brpl	.-8      	; 0x8fc <DIO_getPinValue+0x6c>
     904:	81 70       	andi	r24, 0x01	; 1
     906:	fa 01       	movw	r30, r20
     908:	80 83       	st	Z, r24
     90a:	80 e0       	ldi	r24, 0x00	; 0
     90c:	08 95       	ret
     90e:	84 e0       	ldi	r24, 0x04	; 4
     910:	08 95       	ret
     912:	81 e0       	ldi	r24, 0x01	; 1
     914:	08 95       	ret
     916:	87 e0       	ldi	r24, 0x07	; 7
     918:	08 95       	ret
     91a:	80 e0       	ldi	r24, 0x00	; 0
     91c:	08 95       	ret

0000091e <__vector_6>:
     91e:	1f 92       	push	r1
     920:	0f 92       	push	r0
     922:	0f b6       	in	r0, 0x3f	; 63
     924:	0f 92       	push	r0
     926:	11 24       	eor	r1, r1
     928:	2f 93       	push	r18
     92a:	3f 93       	push	r19
     92c:	4f 93       	push	r20
     92e:	5f 93       	push	r21
     930:	6f 93       	push	r22
     932:	7f 93       	push	r23
     934:	8f 93       	push	r24
     936:	9f 93       	push	r25
     938:	af 93       	push	r26
     93a:	bf 93       	push	r27
     93c:	ef 93       	push	r30
     93e:	ff 93       	push	r31
     940:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <TMR1_CAPISRPtrFun>
     944:	f0 91 85 00 	lds	r31, 0x0085	; 0x800085 <TMR1_CAPISRPtrFun+0x1>
     948:	09 95       	icall
     94a:	ff 91       	pop	r31
     94c:	ef 91       	pop	r30
     94e:	bf 91       	pop	r27
     950:	af 91       	pop	r26
     952:	9f 91       	pop	r25
     954:	8f 91       	pop	r24
     956:	7f 91       	pop	r23
     958:	6f 91       	pop	r22
     95a:	5f 91       	pop	r21
     95c:	4f 91       	pop	r20
     95e:	3f 91       	pop	r19
     960:	2f 91       	pop	r18
     962:	0f 90       	pop	r0
     964:	0f be       	out	0x3f, r0	; 63
     966:	0f 90       	pop	r0
     968:	1f 90       	pop	r1
     96a:	18 95       	reti

0000096c <__vector_7>:
     96c:	1f 92       	push	r1
     96e:	0f 92       	push	r0
     970:	0f b6       	in	r0, 0x3f	; 63
     972:	0f 92       	push	r0
     974:	11 24       	eor	r1, r1
     976:	2f 93       	push	r18
     978:	3f 93       	push	r19
     97a:	4f 93       	push	r20
     97c:	5f 93       	push	r21
     97e:	6f 93       	push	r22
     980:	7f 93       	push	r23
     982:	8f 93       	push	r24
     984:	9f 93       	push	r25
     986:	af 93       	push	r26
     988:	bf 93       	push	r27
     98a:	ef 93       	push	r30
     98c:	ff 93       	push	r31
     98e:	e0 91 82 00 	lds	r30, 0x0082	; 0x800082 <TMR1_CTCAISRPtrFun>
     992:	f0 91 83 00 	lds	r31, 0x0083	; 0x800083 <TMR1_CTCAISRPtrFun+0x1>
     996:	09 95       	icall
     998:	ff 91       	pop	r31
     99a:	ef 91       	pop	r30
     99c:	bf 91       	pop	r27
     99e:	af 91       	pop	r26
     9a0:	9f 91       	pop	r25
     9a2:	8f 91       	pop	r24
     9a4:	7f 91       	pop	r23
     9a6:	6f 91       	pop	r22
     9a8:	5f 91       	pop	r21
     9aa:	4f 91       	pop	r20
     9ac:	3f 91       	pop	r19
     9ae:	2f 91       	pop	r18
     9b0:	0f 90       	pop	r0
     9b2:	0f be       	out	0x3f, r0	; 63
     9b4:	0f 90       	pop	r0
     9b6:	1f 90       	pop	r1
     9b8:	18 95       	reti

000009ba <__vector_8>:
     9ba:	1f 92       	push	r1
     9bc:	0f 92       	push	r0
     9be:	0f b6       	in	r0, 0x3f	; 63
     9c0:	0f 92       	push	r0
     9c2:	11 24       	eor	r1, r1
     9c4:	2f 93       	push	r18
     9c6:	3f 93       	push	r19
     9c8:	4f 93       	push	r20
     9ca:	5f 93       	push	r21
     9cc:	6f 93       	push	r22
     9ce:	7f 93       	push	r23
     9d0:	8f 93       	push	r24
     9d2:	9f 93       	push	r25
     9d4:	af 93       	push	r26
     9d6:	bf 93       	push	r27
     9d8:	ef 93       	push	r30
     9da:	ff 93       	push	r31
     9dc:	e0 91 7e 00 	lds	r30, 0x007E	; 0x80007e <TMR1_CTCBISRPtrFun>
     9e0:	f0 91 7f 00 	lds	r31, 0x007F	; 0x80007f <TMR1_CTCBISRPtrFun+0x1>
     9e4:	09 95       	icall
     9e6:	ff 91       	pop	r31
     9e8:	ef 91       	pop	r30
     9ea:	bf 91       	pop	r27
     9ec:	af 91       	pop	r26
     9ee:	9f 91       	pop	r25
     9f0:	8f 91       	pop	r24
     9f2:	7f 91       	pop	r23
     9f4:	6f 91       	pop	r22
     9f6:	5f 91       	pop	r21
     9f8:	4f 91       	pop	r20
     9fa:	3f 91       	pop	r19
     9fc:	2f 91       	pop	r18
     9fe:	0f 90       	pop	r0
     a00:	0f be       	out	0x3f, r0	; 63
     a02:	0f 90       	pop	r0
     a04:	1f 90       	pop	r1
     a06:	18 95       	reti

00000a08 <__vector_9>:
     a08:	1f 92       	push	r1
     a0a:	0f 92       	push	r0
     a0c:	0f b6       	in	r0, 0x3f	; 63
     a0e:	0f 92       	push	r0
     a10:	11 24       	eor	r1, r1
     a12:	2f 93       	push	r18
     a14:	3f 93       	push	r19
     a16:	4f 93       	push	r20
     a18:	5f 93       	push	r21
     a1a:	6f 93       	push	r22
     a1c:	7f 93       	push	r23
     a1e:	8f 93       	push	r24
     a20:	9f 93       	push	r25
     a22:	af 93       	push	r26
     a24:	bf 93       	push	r27
     a26:	ef 93       	push	r30
     a28:	ff 93       	push	r31
     a2a:	e0 91 80 00 	lds	r30, 0x0080	; 0x800080 <TMR1_OVFISRPtrFun>
     a2e:	f0 91 81 00 	lds	r31, 0x0081	; 0x800081 <TMR1_OVFISRPtrFun+0x1>
     a32:	09 95       	icall
     a34:	ff 91       	pop	r31
     a36:	ef 91       	pop	r30
     a38:	bf 91       	pop	r27
     a3a:	af 91       	pop	r26
     a3c:	9f 91       	pop	r25
     a3e:	8f 91       	pop	r24
     a40:	7f 91       	pop	r23
     a42:	6f 91       	pop	r22
     a44:	5f 91       	pop	r21
     a46:	4f 91       	pop	r20
     a48:	3f 91       	pop	r19
     a4a:	2f 91       	pop	r18
     a4c:	0f 90       	pop	r0
     a4e:	0f be       	out	0x3f, r0	; 63
     a50:	0f 90       	pop	r0
     a52:	1f 90       	pop	r1
     a54:	18 95       	reti

00000a56 <TMR1_init>:
     a56:	80 31       	cpi	r24, 0x10	; 16
     a58:	08 f0       	brcs	.+2      	; 0xa5c <TMR1_init+0x6>
     a5a:	12 c1       	rjmp	.+548    	; 0xc80 <TMR1_init+0x22a>
     a5c:	8d 30       	cpi	r24, 0x0D	; 13
     a5e:	09 f4       	brne	.+2      	; 0xa62 <TMR1_init+0xc>
     a60:	11 c1       	rjmp	.+546    	; 0xc84 <TMR1_init+0x22e>
     a62:	90 e0       	ldi	r25, 0x00	; 0
     a64:	80 31       	cpi	r24, 0x10	; 16
     a66:	91 05       	cpc	r25, r1
     a68:	08 f0       	brcs	.+2      	; 0xa6c <TMR1_init+0x16>
     a6a:	c7 c0       	rjmp	.+398    	; 0xbfa <TMR1_init+0x1a4>
     a6c:	fc 01       	movw	r30, r24
     a6e:	e6 5d       	subi	r30, 0xD6	; 214
     a70:	ff 4f       	sbci	r31, 0xFF	; 255
     a72:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__tablejump2__>
     a76:	8f b5       	in	r24, 0x2f	; 47
     a78:	8e 7f       	andi	r24, 0xFE	; 254
     a7a:	8f bd       	out	0x2f, r24	; 47
     a7c:	8f b5       	in	r24, 0x2f	; 47
     a7e:	8d 7f       	andi	r24, 0xFD	; 253
     a80:	8f bd       	out	0x2f, r24	; 47
     a82:	8e b5       	in	r24, 0x2e	; 46
     a84:	87 7f       	andi	r24, 0xF7	; 247
     a86:	8e bd       	out	0x2e, r24	; 46
     a88:	8e b5       	in	r24, 0x2e	; 46
     a8a:	8f 7e       	andi	r24, 0xEF	; 239
     a8c:	8e bd       	out	0x2e, r24	; 46
     a8e:	b5 c0       	rjmp	.+362    	; 0xbfa <TMR1_init+0x1a4>
     a90:	8f b5       	in	r24, 0x2f	; 47
     a92:	81 60       	ori	r24, 0x01	; 1
     a94:	8f bd       	out	0x2f, r24	; 47
     a96:	8f b5       	in	r24, 0x2f	; 47
     a98:	8d 7f       	andi	r24, 0xFD	; 253
     a9a:	8f bd       	out	0x2f, r24	; 47
     a9c:	8e b5       	in	r24, 0x2e	; 46
     a9e:	87 7f       	andi	r24, 0xF7	; 247
     aa0:	8e bd       	out	0x2e, r24	; 46
     aa2:	8e b5       	in	r24, 0x2e	; 46
     aa4:	8f 7e       	andi	r24, 0xEF	; 239
     aa6:	8e bd       	out	0x2e, r24	; 46
     aa8:	a8 c0       	rjmp	.+336    	; 0xbfa <TMR1_init+0x1a4>
     aaa:	8f b5       	in	r24, 0x2f	; 47
     aac:	8e 7f       	andi	r24, 0xFE	; 254
     aae:	8f bd       	out	0x2f, r24	; 47
     ab0:	8f b5       	in	r24, 0x2f	; 47
     ab2:	82 60       	ori	r24, 0x02	; 2
     ab4:	8f bd       	out	0x2f, r24	; 47
     ab6:	8e b5       	in	r24, 0x2e	; 46
     ab8:	87 7f       	andi	r24, 0xF7	; 247
     aba:	8e bd       	out	0x2e, r24	; 46
     abc:	8e b5       	in	r24, 0x2e	; 46
     abe:	8f 7e       	andi	r24, 0xEF	; 239
     ac0:	8e bd       	out	0x2e, r24	; 46
     ac2:	9b c0       	rjmp	.+310    	; 0xbfa <TMR1_init+0x1a4>
     ac4:	8f b5       	in	r24, 0x2f	; 47
     ac6:	81 60       	ori	r24, 0x01	; 1
     ac8:	8f bd       	out	0x2f, r24	; 47
     aca:	8f b5       	in	r24, 0x2f	; 47
     acc:	82 60       	ori	r24, 0x02	; 2
     ace:	8f bd       	out	0x2f, r24	; 47
     ad0:	8e b5       	in	r24, 0x2e	; 46
     ad2:	87 7f       	andi	r24, 0xF7	; 247
     ad4:	8e bd       	out	0x2e, r24	; 46
     ad6:	8e b5       	in	r24, 0x2e	; 46
     ad8:	8f 7e       	andi	r24, 0xEF	; 239
     ada:	8e bd       	out	0x2e, r24	; 46
     adc:	8e c0       	rjmp	.+284    	; 0xbfa <TMR1_init+0x1a4>
     ade:	8f b5       	in	r24, 0x2f	; 47
     ae0:	8e 7f       	andi	r24, 0xFE	; 254
     ae2:	8f bd       	out	0x2f, r24	; 47
     ae4:	8f b5       	in	r24, 0x2f	; 47
     ae6:	8d 7f       	andi	r24, 0xFD	; 253
     ae8:	8f bd       	out	0x2f, r24	; 47
     aea:	8e b5       	in	r24, 0x2e	; 46
     aec:	88 60       	ori	r24, 0x08	; 8
     aee:	8e bd       	out	0x2e, r24	; 46
     af0:	8e b5       	in	r24, 0x2e	; 46
     af2:	8f 7e       	andi	r24, 0xEF	; 239
     af4:	8e bd       	out	0x2e, r24	; 46
     af6:	81 c0       	rjmp	.+258    	; 0xbfa <TMR1_init+0x1a4>
     af8:	8f b5       	in	r24, 0x2f	; 47
     afa:	81 60       	ori	r24, 0x01	; 1
     afc:	8f bd       	out	0x2f, r24	; 47
     afe:	8f b5       	in	r24, 0x2f	; 47
     b00:	8d 7f       	andi	r24, 0xFD	; 253
     b02:	8f bd       	out	0x2f, r24	; 47
     b04:	8e b5       	in	r24, 0x2e	; 46
     b06:	88 60       	ori	r24, 0x08	; 8
     b08:	8e bd       	out	0x2e, r24	; 46
     b0a:	8e b5       	in	r24, 0x2e	; 46
     b0c:	8f 7e       	andi	r24, 0xEF	; 239
     b0e:	8e bd       	out	0x2e, r24	; 46
     b10:	74 c0       	rjmp	.+232    	; 0xbfa <TMR1_init+0x1a4>
     b12:	8f b5       	in	r24, 0x2f	; 47
     b14:	8e 7f       	andi	r24, 0xFE	; 254
     b16:	8f bd       	out	0x2f, r24	; 47
     b18:	8f b5       	in	r24, 0x2f	; 47
     b1a:	82 60       	ori	r24, 0x02	; 2
     b1c:	8f bd       	out	0x2f, r24	; 47
     b1e:	8e b5       	in	r24, 0x2e	; 46
     b20:	88 60       	ori	r24, 0x08	; 8
     b22:	8e bd       	out	0x2e, r24	; 46
     b24:	8e b5       	in	r24, 0x2e	; 46
     b26:	8f 7e       	andi	r24, 0xEF	; 239
     b28:	8e bd       	out	0x2e, r24	; 46
     b2a:	67 c0       	rjmp	.+206    	; 0xbfa <TMR1_init+0x1a4>
     b2c:	8f b5       	in	r24, 0x2f	; 47
     b2e:	81 60       	ori	r24, 0x01	; 1
     b30:	8f bd       	out	0x2f, r24	; 47
     b32:	8f b5       	in	r24, 0x2f	; 47
     b34:	82 60       	ori	r24, 0x02	; 2
     b36:	8f bd       	out	0x2f, r24	; 47
     b38:	8e b5       	in	r24, 0x2e	; 46
     b3a:	88 60       	ori	r24, 0x08	; 8
     b3c:	8e bd       	out	0x2e, r24	; 46
     b3e:	8e b5       	in	r24, 0x2e	; 46
     b40:	8f 7e       	andi	r24, 0xEF	; 239
     b42:	8e bd       	out	0x2e, r24	; 46
     b44:	5a c0       	rjmp	.+180    	; 0xbfa <TMR1_init+0x1a4>
     b46:	8f b5       	in	r24, 0x2f	; 47
     b48:	8e 7f       	andi	r24, 0xFE	; 254
     b4a:	8f bd       	out	0x2f, r24	; 47
     b4c:	8f b5       	in	r24, 0x2f	; 47
     b4e:	8d 7f       	andi	r24, 0xFD	; 253
     b50:	8f bd       	out	0x2f, r24	; 47
     b52:	8e b5       	in	r24, 0x2e	; 46
     b54:	87 7f       	andi	r24, 0xF7	; 247
     b56:	8e bd       	out	0x2e, r24	; 46
     b58:	8e b5       	in	r24, 0x2e	; 46
     b5a:	80 61       	ori	r24, 0x10	; 16
     b5c:	8e bd       	out	0x2e, r24	; 46
     b5e:	4d c0       	rjmp	.+154    	; 0xbfa <TMR1_init+0x1a4>
     b60:	8f b5       	in	r24, 0x2f	; 47
     b62:	81 60       	ori	r24, 0x01	; 1
     b64:	8f bd       	out	0x2f, r24	; 47
     b66:	8f b5       	in	r24, 0x2f	; 47
     b68:	8d 7f       	andi	r24, 0xFD	; 253
     b6a:	8f bd       	out	0x2f, r24	; 47
     b6c:	8e b5       	in	r24, 0x2e	; 46
     b6e:	87 7f       	andi	r24, 0xF7	; 247
     b70:	8e bd       	out	0x2e, r24	; 46
     b72:	8e b5       	in	r24, 0x2e	; 46
     b74:	80 61       	ori	r24, 0x10	; 16
     b76:	8e bd       	out	0x2e, r24	; 46
     b78:	40 c0       	rjmp	.+128    	; 0xbfa <TMR1_init+0x1a4>
     b7a:	8f b5       	in	r24, 0x2f	; 47
     b7c:	8e 7f       	andi	r24, 0xFE	; 254
     b7e:	8f bd       	out	0x2f, r24	; 47
     b80:	8f b5       	in	r24, 0x2f	; 47
     b82:	82 60       	ori	r24, 0x02	; 2
     b84:	8f bd       	out	0x2f, r24	; 47
     b86:	8e b5       	in	r24, 0x2e	; 46
     b88:	87 7f       	andi	r24, 0xF7	; 247
     b8a:	8e bd       	out	0x2e, r24	; 46
     b8c:	8e b5       	in	r24, 0x2e	; 46
     b8e:	80 61       	ori	r24, 0x10	; 16
     b90:	8e bd       	out	0x2e, r24	; 46
     b92:	33 c0       	rjmp	.+102    	; 0xbfa <TMR1_init+0x1a4>
     b94:	8f b5       	in	r24, 0x2f	; 47
     b96:	81 60       	ori	r24, 0x01	; 1
     b98:	8f bd       	out	0x2f, r24	; 47
     b9a:	8f b5       	in	r24, 0x2f	; 47
     b9c:	82 60       	ori	r24, 0x02	; 2
     b9e:	8f bd       	out	0x2f, r24	; 47
     ba0:	8e b5       	in	r24, 0x2e	; 46
     ba2:	87 7f       	andi	r24, 0xF7	; 247
     ba4:	8e bd       	out	0x2e, r24	; 46
     ba6:	8e b5       	in	r24, 0x2e	; 46
     ba8:	80 61       	ori	r24, 0x10	; 16
     baa:	8e bd       	out	0x2e, r24	; 46
     bac:	26 c0       	rjmp	.+76     	; 0xbfa <TMR1_init+0x1a4>
     bae:	8f b5       	in	r24, 0x2f	; 47
     bb0:	8e 7f       	andi	r24, 0xFE	; 254
     bb2:	8f bd       	out	0x2f, r24	; 47
     bb4:	8f b5       	in	r24, 0x2f	; 47
     bb6:	8d 7f       	andi	r24, 0xFD	; 253
     bb8:	8f bd       	out	0x2f, r24	; 47
     bba:	8e b5       	in	r24, 0x2e	; 46
     bbc:	88 60       	ori	r24, 0x08	; 8
     bbe:	8e bd       	out	0x2e, r24	; 46
     bc0:	8e b5       	in	r24, 0x2e	; 46
     bc2:	80 61       	ori	r24, 0x10	; 16
     bc4:	8e bd       	out	0x2e, r24	; 46
     bc6:	19 c0       	rjmp	.+50     	; 0xbfa <TMR1_init+0x1a4>
     bc8:	8f b5       	in	r24, 0x2f	; 47
     bca:	8e 7f       	andi	r24, 0xFE	; 254
     bcc:	8f bd       	out	0x2f, r24	; 47
     bce:	8f b5       	in	r24, 0x2f	; 47
     bd0:	82 60       	ori	r24, 0x02	; 2
     bd2:	8f bd       	out	0x2f, r24	; 47
     bd4:	8e b5       	in	r24, 0x2e	; 46
     bd6:	88 60       	ori	r24, 0x08	; 8
     bd8:	8e bd       	out	0x2e, r24	; 46
     bda:	8e b5       	in	r24, 0x2e	; 46
     bdc:	80 61       	ori	r24, 0x10	; 16
     bde:	8e bd       	out	0x2e, r24	; 46
     be0:	0c c0       	rjmp	.+24     	; 0xbfa <TMR1_init+0x1a4>
     be2:	8f b5       	in	r24, 0x2f	; 47
     be4:	81 60       	ori	r24, 0x01	; 1
     be6:	8f bd       	out	0x2f, r24	; 47
     be8:	8f b5       	in	r24, 0x2f	; 47
     bea:	82 60       	ori	r24, 0x02	; 2
     bec:	8f bd       	out	0x2f, r24	; 47
     bee:	8e b5       	in	r24, 0x2e	; 46
     bf0:	88 60       	ori	r24, 0x08	; 8
     bf2:	8e bd       	out	0x2e, r24	; 46
     bf4:	8e b5       	in	r24, 0x2e	; 46
     bf6:	80 61       	ori	r24, 0x10	; 16
     bf8:	8e bd       	out	0x2e, r24	; 46
     bfa:	64 30       	cpi	r22, 0x04	; 4
     bfc:	08 f0       	brcs	.+2      	; 0xc00 <TMR1_init+0x1aa>
     bfe:	44 c0       	rjmp	.+136    	; 0xc88 <TMR1_init+0x232>
     c00:	61 30       	cpi	r22, 0x01	; 1
     c02:	a1 f0       	breq	.+40     	; 0xc2c <TMR1_init+0x1d6>
     c04:	28 f0       	brcs	.+10     	; 0xc10 <TMR1_init+0x1ba>
     c06:	62 30       	cpi	r22, 0x02	; 2
     c08:	f9 f0       	breq	.+62     	; 0xc48 <TMR1_init+0x1f2>
     c0a:	63 30       	cpi	r22, 0x03	; 3
     c0c:	59 f1       	breq	.+86     	; 0xc64 <TMR1_init+0x20e>
     c0e:	3e c0       	rjmp	.+124    	; 0xc8c <TMR1_init+0x236>
     c10:	8f b5       	in	r24, 0x2f	; 47
     c12:	8f 7b       	andi	r24, 0xBF	; 191
     c14:	8f bd       	out	0x2f, r24	; 47
     c16:	8f b5       	in	r24, 0x2f	; 47
     c18:	8f 77       	andi	r24, 0x7F	; 127
     c1a:	8f bd       	out	0x2f, r24	; 47
     c1c:	8f b5       	in	r24, 0x2f	; 47
     c1e:	8f 7e       	andi	r24, 0xEF	; 239
     c20:	8f bd       	out	0x2f, r24	; 47
     c22:	8f b5       	in	r24, 0x2f	; 47
     c24:	8f 7d       	andi	r24, 0xDF	; 223
     c26:	8f bd       	out	0x2f, r24	; 47
     c28:	80 e0       	ldi	r24, 0x00	; 0
     c2a:	08 95       	ret
     c2c:	8f b5       	in	r24, 0x2f	; 47
     c2e:	80 64       	ori	r24, 0x40	; 64
     c30:	8f bd       	out	0x2f, r24	; 47
     c32:	8f b5       	in	r24, 0x2f	; 47
     c34:	8f 77       	andi	r24, 0x7F	; 127
     c36:	8f bd       	out	0x2f, r24	; 47
     c38:	8f b5       	in	r24, 0x2f	; 47
     c3a:	80 61       	ori	r24, 0x10	; 16
     c3c:	8f bd       	out	0x2f, r24	; 47
     c3e:	8f b5       	in	r24, 0x2f	; 47
     c40:	8f 7d       	andi	r24, 0xDF	; 223
     c42:	8f bd       	out	0x2f, r24	; 47
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	08 95       	ret
     c48:	8f b5       	in	r24, 0x2f	; 47
     c4a:	8f 7b       	andi	r24, 0xBF	; 191
     c4c:	8f bd       	out	0x2f, r24	; 47
     c4e:	8f b5       	in	r24, 0x2f	; 47
     c50:	80 68       	ori	r24, 0x80	; 128
     c52:	8f bd       	out	0x2f, r24	; 47
     c54:	8f b5       	in	r24, 0x2f	; 47
     c56:	8f 7e       	andi	r24, 0xEF	; 239
     c58:	8f bd       	out	0x2f, r24	; 47
     c5a:	8f b5       	in	r24, 0x2f	; 47
     c5c:	80 62       	ori	r24, 0x20	; 32
     c5e:	8f bd       	out	0x2f, r24	; 47
     c60:	80 e0       	ldi	r24, 0x00	; 0
     c62:	08 95       	ret
     c64:	8f b5       	in	r24, 0x2f	; 47
     c66:	80 64       	ori	r24, 0x40	; 64
     c68:	8f bd       	out	0x2f, r24	; 47
     c6a:	8f b5       	in	r24, 0x2f	; 47
     c6c:	80 68       	ori	r24, 0x80	; 128
     c6e:	8f bd       	out	0x2f, r24	; 47
     c70:	8f b5       	in	r24, 0x2f	; 47
     c72:	80 61       	ori	r24, 0x10	; 16
     c74:	8f bd       	out	0x2f, r24	; 47
     c76:	8f b5       	in	r24, 0x2f	; 47
     c78:	80 62       	ori	r24, 0x20	; 32
     c7a:	8f bd       	out	0x2f, r24	; 47
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	08 95       	ret
     c80:	81 e0       	ldi	r24, 0x01	; 1
     c82:	08 95       	ret
     c84:	81 e0       	ldi	r24, 0x01	; 1
     c86:	08 95       	ret
     c88:	82 e0       	ldi	r24, 0x02	; 2
     c8a:	08 95       	ret
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	08 95       	ret

00000c90 <TMR1_start>:
     c90:	8e b5       	in	r24, 0x2e	; 46
     c92:	83 60       	ori	r24, 0x03	; 3
     c94:	8e bd       	out	0x2e, r24	; 46
     c96:	08 95       	ret

00000c98 <TMR1_writeComparingValueA>:
     c98:	9b bd       	out	0x2b, r25	; 43
     c9a:	8a bd       	out	0x2a, r24	; 42
     c9c:	08 95       	ret

00000c9e <TMR1_writeComparingValueB>:
     c9e:	99 bd       	out	0x29, r25	; 41
     ca0:	88 bd       	out	0x28, r24	; 40
     ca2:	08 95       	ret

00000ca4 <TMR1_writeCapturingValue>:
     ca4:	97 bd       	out	0x27, r25	; 39
     ca6:	86 bd       	out	0x26, r24	; 38
     ca8:	08 95       	ret

00000caa <TMR1_tickTimemicro>:
     caa:	84 e0       	ldi	r24, 0x04	; 4
     cac:	08 95       	ret

00000cae <MAP>:
     cae:	4f 92       	push	r4
     cb0:	5f 92       	push	r5
     cb2:	6f 92       	push	r6
     cb4:	7f 92       	push	r7
     cb6:	af 92       	push	r10
     cb8:	bf 92       	push	r11
     cba:	cf 92       	push	r12
     cbc:	df 92       	push	r13
     cbe:	ef 92       	push	r14
     cc0:	ff 92       	push	r15
     cc2:	0f 93       	push	r16
     cc4:	1f 93       	push	r17
     cc6:	cf 93       	push	r28
     cc8:	df 93       	push	r29
     cca:	cd b7       	in	r28, 0x3d	; 61
     ccc:	de b7       	in	r29, 0x3e	; 62
     cce:	2c 97       	sbiw	r28, 0x0c	; 12
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	f8 94       	cli
     cd4:	de bf       	out	0x3e, r29	; 62
     cd6:	0f be       	out	0x3f, r0	; 63
     cd8:	cd bf       	out	0x3d, r28	; 61
     cda:	29 01       	movw	r4, r18
     cdc:	3a 01       	movw	r6, r20
     cde:	ed 82       	std	Y+5, r14	; 0x05
     ce0:	fe 82       	std	Y+6, r15	; 0x06
     ce2:	0f 83       	std	Y+7, r16	; 0x07
     ce4:	18 87       	std	Y+8, r17	; 0x08
     ce6:	0e 94 c0 06 	call	0xd80	; 0xd80 <__subsf3>
     cea:	0e 94 9f 07 	call	0xf3e	; 0xf3e <__fixsfsi>
     cee:	69 83       	std	Y+1, r22	; 0x01
     cf0:	7a 83       	std	Y+2, r23	; 0x02
     cf2:	8b 83       	std	Y+3, r24	; 0x03
     cf4:	9c 83       	std	Y+4, r25	; 0x04
     cf6:	a6 01       	movw	r20, r12
     cf8:	95 01       	movw	r18, r10
     cfa:	6d 8d       	ldd	r22, Y+29	; 0x1d
     cfc:	7e 8d       	ldd	r23, Y+30	; 0x1e
     cfe:	8f 8d       	ldd	r24, Y+31	; 0x1f
     d00:	98 a1       	ldd	r25, Y+32	; 0x20
     d02:	0e 94 c0 06 	call	0xd80	; 0xd80 <__subsf3>
     d06:	69 87       	std	Y+9, r22	; 0x09
     d08:	7a 87       	std	Y+10, r23	; 0x0a
     d0a:	8b 87       	std	Y+11, r24	; 0x0b
     d0c:	9c 87       	std	Y+12, r25	; 0x0c
     d0e:	a3 01       	movw	r20, r6
     d10:	92 01       	movw	r18, r4
     d12:	c8 01       	movw	r24, r16
     d14:	b7 01       	movw	r22, r14
     d16:	0e 94 c0 06 	call	0xd80	; 0xd80 <__subsf3>
     d1a:	9b 01       	movw	r18, r22
     d1c:	ac 01       	movw	r20, r24
     d1e:	69 85       	ldd	r22, Y+9	; 0x09
     d20:	7a 85       	ldd	r23, Y+10	; 0x0a
     d22:	8b 85       	ldd	r24, Y+11	; 0x0b
     d24:	9c 85       	ldd	r25, Y+12	; 0x0c
     d26:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__divsf3>
     d2a:	2b 01       	movw	r4, r22
     d2c:	3c 01       	movw	r6, r24
     d2e:	69 81       	ldd	r22, Y+1	; 0x01
     d30:	7a 81       	ldd	r23, Y+2	; 0x02
     d32:	8b 81       	ldd	r24, Y+3	; 0x03
     d34:	9c 81       	ldd	r25, Y+4	; 0x04
     d36:	0e 94 d7 07 	call	0xfae	; 0xfae <__floatsisf>
     d3a:	a3 01       	movw	r20, r6
     d3c:	92 01       	movw	r18, r4
     d3e:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__mulsf3>
     d42:	9b 01       	movw	r18, r22
     d44:	ac 01       	movw	r20, r24
     d46:	c6 01       	movw	r24, r12
     d48:	b5 01       	movw	r22, r10
     d4a:	0e 94 c1 06 	call	0xd82	; 0xd82 <__addsf3>
     d4e:	0e 94 9f 07 	call	0xf3e	; 0xf3e <__fixsfsi>
     d52:	0e 94 d7 07 	call	0xfae	; 0xfae <__floatsisf>
     d56:	2c 96       	adiw	r28, 0x0c	; 12
     d58:	0f b6       	in	r0, 0x3f	; 63
     d5a:	f8 94       	cli
     d5c:	de bf       	out	0x3e, r29	; 62
     d5e:	0f be       	out	0x3f, r0	; 63
     d60:	cd bf       	out	0x3d, r28	; 61
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	ff 90       	pop	r15
     d6c:	ef 90       	pop	r14
     d6e:	df 90       	pop	r13
     d70:	cf 90       	pop	r12
     d72:	bf 90       	pop	r11
     d74:	af 90       	pop	r10
     d76:	7f 90       	pop	r7
     d78:	6f 90       	pop	r6
     d7a:	5f 90       	pop	r5
     d7c:	4f 90       	pop	r4
     d7e:	08 95       	ret

00000d80 <__subsf3>:
     d80:	50 58       	subi	r21, 0x80	; 128

00000d82 <__addsf3>:
     d82:	bb 27       	eor	r27, r27
     d84:	aa 27       	eor	r26, r26
     d86:	0e 94 d8 06 	call	0xdb0	; 0xdb0 <__addsf3x>
     d8a:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__fp_round>
     d8e:	0e 94 1b 08 	call	0x1036	; 0x1036 <__fp_pscA>
     d92:	38 f0       	brcs	.+14     	; 0xda2 <__addsf3+0x20>
     d94:	0e 94 22 08 	call	0x1044	; 0x1044 <__fp_pscB>
     d98:	20 f0       	brcs	.+8      	; 0xda2 <__addsf3+0x20>
     d9a:	39 f4       	brne	.+14     	; 0xdaa <__addsf3+0x28>
     d9c:	9f 3f       	cpi	r25, 0xFF	; 255
     d9e:	19 f4       	brne	.+6      	; 0xda6 <__addsf3+0x24>
     da0:	26 f4       	brtc	.+8      	; 0xdaa <__addsf3+0x28>
     da2:	0c 94 18 08 	jmp	0x1030	; 0x1030 <__fp_nan>
     da6:	0e f4       	brtc	.+2      	; 0xdaa <__addsf3+0x28>
     da8:	e0 95       	com	r30
     daa:	e7 fb       	bst	r30, 7
     dac:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__fp_inf>

00000db0 <__addsf3x>:
     db0:	e9 2f       	mov	r30, r25
     db2:	0e 94 3a 08 	call	0x1074	; 0x1074 <__fp_split3>
     db6:	58 f3       	brcs	.-42     	; 0xd8e <__addsf3+0xc>
     db8:	ba 17       	cp	r27, r26
     dba:	62 07       	cpc	r22, r18
     dbc:	73 07       	cpc	r23, r19
     dbe:	84 07       	cpc	r24, r20
     dc0:	95 07       	cpc	r25, r21
     dc2:	20 f0       	brcs	.+8      	; 0xdcc <__addsf3x+0x1c>
     dc4:	79 f4       	brne	.+30     	; 0xde4 <__addsf3x+0x34>
     dc6:	a6 f5       	brtc	.+104    	; 0xe30 <__addsf3x+0x80>
     dc8:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_zero>
     dcc:	0e f4       	brtc	.+2      	; 0xdd0 <__addsf3x+0x20>
     dce:	e0 95       	com	r30
     dd0:	0b 2e       	mov	r0, r27
     dd2:	ba 2f       	mov	r27, r26
     dd4:	a0 2d       	mov	r26, r0
     dd6:	0b 01       	movw	r0, r22
     dd8:	b9 01       	movw	r22, r18
     dda:	90 01       	movw	r18, r0
     ddc:	0c 01       	movw	r0, r24
     dde:	ca 01       	movw	r24, r20
     de0:	a0 01       	movw	r20, r0
     de2:	11 24       	eor	r1, r1
     de4:	ff 27       	eor	r31, r31
     de6:	59 1b       	sub	r21, r25
     de8:	99 f0       	breq	.+38     	; 0xe10 <__addsf3x+0x60>
     dea:	59 3f       	cpi	r21, 0xF9	; 249
     dec:	50 f4       	brcc	.+20     	; 0xe02 <__addsf3x+0x52>
     dee:	50 3e       	cpi	r21, 0xE0	; 224
     df0:	68 f1       	brcs	.+90     	; 0xe4c <__addsf3x+0x9c>
     df2:	1a 16       	cp	r1, r26
     df4:	f0 40       	sbci	r31, 0x00	; 0
     df6:	a2 2f       	mov	r26, r18
     df8:	23 2f       	mov	r18, r19
     dfa:	34 2f       	mov	r19, r20
     dfc:	44 27       	eor	r20, r20
     dfe:	58 5f       	subi	r21, 0xF8	; 248
     e00:	f3 cf       	rjmp	.-26     	; 0xde8 <__addsf3x+0x38>
     e02:	46 95       	lsr	r20
     e04:	37 95       	ror	r19
     e06:	27 95       	ror	r18
     e08:	a7 95       	ror	r26
     e0a:	f0 40       	sbci	r31, 0x00	; 0
     e0c:	53 95       	inc	r21
     e0e:	c9 f7       	brne	.-14     	; 0xe02 <__addsf3x+0x52>
     e10:	7e f4       	brtc	.+30     	; 0xe30 <__addsf3x+0x80>
     e12:	1f 16       	cp	r1, r31
     e14:	ba 0b       	sbc	r27, r26
     e16:	62 0b       	sbc	r22, r18
     e18:	73 0b       	sbc	r23, r19
     e1a:	84 0b       	sbc	r24, r20
     e1c:	ba f0       	brmi	.+46     	; 0xe4c <__addsf3x+0x9c>
     e1e:	91 50       	subi	r25, 0x01	; 1
     e20:	a1 f0       	breq	.+40     	; 0xe4a <__addsf3x+0x9a>
     e22:	ff 0f       	add	r31, r31
     e24:	bb 1f       	adc	r27, r27
     e26:	66 1f       	adc	r22, r22
     e28:	77 1f       	adc	r23, r23
     e2a:	88 1f       	adc	r24, r24
     e2c:	c2 f7       	brpl	.-16     	; 0xe1e <__addsf3x+0x6e>
     e2e:	0e c0       	rjmp	.+28     	; 0xe4c <__addsf3x+0x9c>
     e30:	ba 0f       	add	r27, r26
     e32:	62 1f       	adc	r22, r18
     e34:	73 1f       	adc	r23, r19
     e36:	84 1f       	adc	r24, r20
     e38:	48 f4       	brcc	.+18     	; 0xe4c <__addsf3x+0x9c>
     e3a:	87 95       	ror	r24
     e3c:	77 95       	ror	r23
     e3e:	67 95       	ror	r22
     e40:	b7 95       	ror	r27
     e42:	f7 95       	ror	r31
     e44:	9e 3f       	cpi	r25, 0xFE	; 254
     e46:	08 f0       	brcs	.+2      	; 0xe4a <__addsf3x+0x9a>
     e48:	b0 cf       	rjmp	.-160    	; 0xdaa <__addsf3+0x28>
     e4a:	93 95       	inc	r25
     e4c:	88 0f       	add	r24, r24
     e4e:	08 f0       	brcs	.+2      	; 0xe52 <__addsf3x+0xa2>
     e50:	99 27       	eor	r25, r25
     e52:	ee 0f       	add	r30, r30
     e54:	97 95       	ror	r25
     e56:	87 95       	ror	r24
     e58:	08 95       	ret

00000e5a <__divsf3>:
     e5a:	0e 94 41 07 	call	0xe82	; 0xe82 <__divsf3x>
     e5e:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__fp_round>
     e62:	0e 94 22 08 	call	0x1044	; 0x1044 <__fp_pscB>
     e66:	58 f0       	brcs	.+22     	; 0xe7e <__divsf3+0x24>
     e68:	0e 94 1b 08 	call	0x1036	; 0x1036 <__fp_pscA>
     e6c:	40 f0       	brcs	.+16     	; 0xe7e <__divsf3+0x24>
     e6e:	29 f4       	brne	.+10     	; 0xe7a <__divsf3+0x20>
     e70:	5f 3f       	cpi	r21, 0xFF	; 255
     e72:	29 f0       	breq	.+10     	; 0xe7e <__divsf3+0x24>
     e74:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__fp_inf>
     e78:	51 11       	cpse	r21, r1
     e7a:	0c 94 5d 08 	jmp	0x10ba	; 0x10ba <__fp_szero>
     e7e:	0c 94 18 08 	jmp	0x1030	; 0x1030 <__fp_nan>

00000e82 <__divsf3x>:
     e82:	0e 94 3a 08 	call	0x1074	; 0x1074 <__fp_split3>
     e86:	68 f3       	brcs	.-38     	; 0xe62 <__divsf3+0x8>

00000e88 <__divsf3_pse>:
     e88:	99 23       	and	r25, r25
     e8a:	b1 f3       	breq	.-20     	; 0xe78 <__divsf3+0x1e>
     e8c:	55 23       	and	r21, r21
     e8e:	91 f3       	breq	.-28     	; 0xe74 <__divsf3+0x1a>
     e90:	95 1b       	sub	r25, r21
     e92:	55 0b       	sbc	r21, r21
     e94:	bb 27       	eor	r27, r27
     e96:	aa 27       	eor	r26, r26
     e98:	62 17       	cp	r22, r18
     e9a:	73 07       	cpc	r23, r19
     e9c:	84 07       	cpc	r24, r20
     e9e:	38 f0       	brcs	.+14     	; 0xeae <__divsf3_pse+0x26>
     ea0:	9f 5f       	subi	r25, 0xFF	; 255
     ea2:	5f 4f       	sbci	r21, 0xFF	; 255
     ea4:	22 0f       	add	r18, r18
     ea6:	33 1f       	adc	r19, r19
     ea8:	44 1f       	adc	r20, r20
     eaa:	aa 1f       	adc	r26, r26
     eac:	a9 f3       	breq	.-22     	; 0xe98 <__divsf3_pse+0x10>
     eae:	35 d0       	rcall	.+106    	; 0xf1a <__divsf3_pse+0x92>
     eb0:	0e 2e       	mov	r0, r30
     eb2:	3a f0       	brmi	.+14     	; 0xec2 <__divsf3_pse+0x3a>
     eb4:	e0 e8       	ldi	r30, 0x80	; 128
     eb6:	32 d0       	rcall	.+100    	; 0xf1c <__divsf3_pse+0x94>
     eb8:	91 50       	subi	r25, 0x01	; 1
     eba:	50 40       	sbci	r21, 0x00	; 0
     ebc:	e6 95       	lsr	r30
     ebe:	00 1c       	adc	r0, r0
     ec0:	ca f7       	brpl	.-14     	; 0xeb4 <__divsf3_pse+0x2c>
     ec2:	2b d0       	rcall	.+86     	; 0xf1a <__divsf3_pse+0x92>
     ec4:	fe 2f       	mov	r31, r30
     ec6:	29 d0       	rcall	.+82     	; 0xf1a <__divsf3_pse+0x92>
     ec8:	66 0f       	add	r22, r22
     eca:	77 1f       	adc	r23, r23
     ecc:	88 1f       	adc	r24, r24
     ece:	bb 1f       	adc	r27, r27
     ed0:	26 17       	cp	r18, r22
     ed2:	37 07       	cpc	r19, r23
     ed4:	48 07       	cpc	r20, r24
     ed6:	ab 07       	cpc	r26, r27
     ed8:	b0 e8       	ldi	r27, 0x80	; 128
     eda:	09 f0       	breq	.+2      	; 0xede <__divsf3_pse+0x56>
     edc:	bb 0b       	sbc	r27, r27
     ede:	80 2d       	mov	r24, r0
     ee0:	bf 01       	movw	r22, r30
     ee2:	ff 27       	eor	r31, r31
     ee4:	93 58       	subi	r25, 0x83	; 131
     ee6:	5f 4f       	sbci	r21, 0xFF	; 255
     ee8:	3a f0       	brmi	.+14     	; 0xef8 <__divsf3_pse+0x70>
     eea:	9e 3f       	cpi	r25, 0xFE	; 254
     eec:	51 05       	cpc	r21, r1
     eee:	78 f0       	brcs	.+30     	; 0xf0e <__divsf3_pse+0x86>
     ef0:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__fp_inf>
     ef4:	0c 94 5d 08 	jmp	0x10ba	; 0x10ba <__fp_szero>
     ef8:	5f 3f       	cpi	r21, 0xFF	; 255
     efa:	e4 f3       	brlt	.-8      	; 0xef4 <__divsf3_pse+0x6c>
     efc:	98 3e       	cpi	r25, 0xE8	; 232
     efe:	d4 f3       	brlt	.-12     	; 0xef4 <__divsf3_pse+0x6c>
     f00:	86 95       	lsr	r24
     f02:	77 95       	ror	r23
     f04:	67 95       	ror	r22
     f06:	b7 95       	ror	r27
     f08:	f7 95       	ror	r31
     f0a:	9f 5f       	subi	r25, 0xFF	; 255
     f0c:	c9 f7       	brne	.-14     	; 0xf00 <__divsf3_pse+0x78>
     f0e:	88 0f       	add	r24, r24
     f10:	91 1d       	adc	r25, r1
     f12:	96 95       	lsr	r25
     f14:	87 95       	ror	r24
     f16:	97 f9       	bld	r25, 7
     f18:	08 95       	ret
     f1a:	e1 e0       	ldi	r30, 0x01	; 1
     f1c:	66 0f       	add	r22, r22
     f1e:	77 1f       	adc	r23, r23
     f20:	88 1f       	adc	r24, r24
     f22:	bb 1f       	adc	r27, r27
     f24:	62 17       	cp	r22, r18
     f26:	73 07       	cpc	r23, r19
     f28:	84 07       	cpc	r24, r20
     f2a:	ba 07       	cpc	r27, r26
     f2c:	20 f0       	brcs	.+8      	; 0xf36 <__divsf3_pse+0xae>
     f2e:	62 1b       	sub	r22, r18
     f30:	73 0b       	sbc	r23, r19
     f32:	84 0b       	sbc	r24, r20
     f34:	ba 0b       	sbc	r27, r26
     f36:	ee 1f       	adc	r30, r30
     f38:	88 f7       	brcc	.-30     	; 0xf1c <__divsf3_pse+0x94>
     f3a:	e0 95       	com	r30
     f3c:	08 95       	ret

00000f3e <__fixsfsi>:
     f3e:	0e 94 a6 07 	call	0xf4c	; 0xf4c <__fixunssfsi>
     f42:	68 94       	set
     f44:	b1 11       	cpse	r27, r1
     f46:	0c 94 5d 08 	jmp	0x10ba	; 0x10ba <__fp_szero>
     f4a:	08 95       	ret

00000f4c <__fixunssfsi>:
     f4c:	0e 94 42 08 	call	0x1084	; 0x1084 <__fp_splitA>
     f50:	88 f0       	brcs	.+34     	; 0xf74 <__fixunssfsi+0x28>
     f52:	9f 57       	subi	r25, 0x7F	; 127
     f54:	98 f0       	brcs	.+38     	; 0xf7c <__fixunssfsi+0x30>
     f56:	b9 2f       	mov	r27, r25
     f58:	99 27       	eor	r25, r25
     f5a:	b7 51       	subi	r27, 0x17	; 23
     f5c:	b0 f0       	brcs	.+44     	; 0xf8a <__fixunssfsi+0x3e>
     f5e:	e1 f0       	breq	.+56     	; 0xf98 <__fixunssfsi+0x4c>
     f60:	66 0f       	add	r22, r22
     f62:	77 1f       	adc	r23, r23
     f64:	88 1f       	adc	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	1a f0       	brmi	.+6      	; 0xf70 <__fixunssfsi+0x24>
     f6a:	ba 95       	dec	r27
     f6c:	c9 f7       	brne	.-14     	; 0xf60 <__fixunssfsi+0x14>
     f6e:	14 c0       	rjmp	.+40     	; 0xf98 <__fixunssfsi+0x4c>
     f70:	b1 30       	cpi	r27, 0x01	; 1
     f72:	91 f0       	breq	.+36     	; 0xf98 <__fixunssfsi+0x4c>
     f74:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__fp_zero>
     f78:	b1 e0       	ldi	r27, 0x01	; 1
     f7a:	08 95       	ret
     f7c:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__fp_zero>
     f80:	67 2f       	mov	r22, r23
     f82:	78 2f       	mov	r23, r24
     f84:	88 27       	eor	r24, r24
     f86:	b8 5f       	subi	r27, 0xF8	; 248
     f88:	39 f0       	breq	.+14     	; 0xf98 <__fixunssfsi+0x4c>
     f8a:	b9 3f       	cpi	r27, 0xF9	; 249
     f8c:	cc f3       	brlt	.-14     	; 0xf80 <__fixunssfsi+0x34>
     f8e:	86 95       	lsr	r24
     f90:	77 95       	ror	r23
     f92:	67 95       	ror	r22
     f94:	b3 95       	inc	r27
     f96:	d9 f7       	brne	.-10     	; 0xf8e <__fixunssfsi+0x42>
     f98:	3e f4       	brtc	.+14     	; 0xfa8 <__fixunssfsi+0x5c>
     f9a:	90 95       	com	r25
     f9c:	80 95       	com	r24
     f9e:	70 95       	com	r23
     fa0:	61 95       	neg	r22
     fa2:	7f 4f       	sbci	r23, 0xFF	; 255
     fa4:	8f 4f       	sbci	r24, 0xFF	; 255
     fa6:	9f 4f       	sbci	r25, 0xFF	; 255
     fa8:	08 95       	ret

00000faa <__floatunsisf>:
     faa:	e8 94       	clt
     fac:	09 c0       	rjmp	.+18     	; 0xfc0 <__floatsisf+0x12>

00000fae <__floatsisf>:
     fae:	97 fb       	bst	r25, 7
     fb0:	3e f4       	brtc	.+14     	; 0xfc0 <__floatsisf+0x12>
     fb2:	90 95       	com	r25
     fb4:	80 95       	com	r24
     fb6:	70 95       	com	r23
     fb8:	61 95       	neg	r22
     fba:	7f 4f       	sbci	r23, 0xFF	; 255
     fbc:	8f 4f       	sbci	r24, 0xFF	; 255
     fbe:	9f 4f       	sbci	r25, 0xFF	; 255
     fc0:	99 23       	and	r25, r25
     fc2:	a9 f0       	breq	.+42     	; 0xfee <__floatsisf+0x40>
     fc4:	f9 2f       	mov	r31, r25
     fc6:	96 e9       	ldi	r25, 0x96	; 150
     fc8:	bb 27       	eor	r27, r27
     fca:	93 95       	inc	r25
     fcc:	f6 95       	lsr	r31
     fce:	87 95       	ror	r24
     fd0:	77 95       	ror	r23
     fd2:	67 95       	ror	r22
     fd4:	b7 95       	ror	r27
     fd6:	f1 11       	cpse	r31, r1
     fd8:	f8 cf       	rjmp	.-16     	; 0xfca <__floatsisf+0x1c>
     fda:	fa f4       	brpl	.+62     	; 0x101a <__floatsisf+0x6c>
     fdc:	bb 0f       	add	r27, r27
     fde:	11 f4       	brne	.+4      	; 0xfe4 <__floatsisf+0x36>
     fe0:	60 ff       	sbrs	r22, 0
     fe2:	1b c0       	rjmp	.+54     	; 0x101a <__floatsisf+0x6c>
     fe4:	6f 5f       	subi	r22, 0xFF	; 255
     fe6:	7f 4f       	sbci	r23, 0xFF	; 255
     fe8:	8f 4f       	sbci	r24, 0xFF	; 255
     fea:	9f 4f       	sbci	r25, 0xFF	; 255
     fec:	16 c0       	rjmp	.+44     	; 0x101a <__floatsisf+0x6c>
     fee:	88 23       	and	r24, r24
     ff0:	11 f0       	breq	.+4      	; 0xff6 <__floatsisf+0x48>
     ff2:	96 e9       	ldi	r25, 0x96	; 150
     ff4:	11 c0       	rjmp	.+34     	; 0x1018 <__floatsisf+0x6a>
     ff6:	77 23       	and	r23, r23
     ff8:	21 f0       	breq	.+8      	; 0x1002 <__floatsisf+0x54>
     ffa:	9e e8       	ldi	r25, 0x8E	; 142
     ffc:	87 2f       	mov	r24, r23
     ffe:	76 2f       	mov	r23, r22
    1000:	05 c0       	rjmp	.+10     	; 0x100c <__floatsisf+0x5e>
    1002:	66 23       	and	r22, r22
    1004:	71 f0       	breq	.+28     	; 0x1022 <__floatsisf+0x74>
    1006:	96 e8       	ldi	r25, 0x86	; 134
    1008:	86 2f       	mov	r24, r22
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	60 e0       	ldi	r22, 0x00	; 0
    100e:	2a f0       	brmi	.+10     	; 0x101a <__floatsisf+0x6c>
    1010:	9a 95       	dec	r25
    1012:	66 0f       	add	r22, r22
    1014:	77 1f       	adc	r23, r23
    1016:	88 1f       	adc	r24, r24
    1018:	da f7       	brpl	.-10     	; 0x1010 <__floatsisf+0x62>
    101a:	88 0f       	add	r24, r24
    101c:	96 95       	lsr	r25
    101e:	87 95       	ror	r24
    1020:	97 f9       	bld	r25, 7
    1022:	08 95       	ret

00001024 <__fp_inf>:
    1024:	97 f9       	bld	r25, 7
    1026:	9f 67       	ori	r25, 0x7F	; 127
    1028:	80 e8       	ldi	r24, 0x80	; 128
    102a:	70 e0       	ldi	r23, 0x00	; 0
    102c:	60 e0       	ldi	r22, 0x00	; 0
    102e:	08 95       	ret

00001030 <__fp_nan>:
    1030:	9f ef       	ldi	r25, 0xFF	; 255
    1032:	80 ec       	ldi	r24, 0xC0	; 192
    1034:	08 95       	ret

00001036 <__fp_pscA>:
    1036:	00 24       	eor	r0, r0
    1038:	0a 94       	dec	r0
    103a:	16 16       	cp	r1, r22
    103c:	17 06       	cpc	r1, r23
    103e:	18 06       	cpc	r1, r24
    1040:	09 06       	cpc	r0, r25
    1042:	08 95       	ret

00001044 <__fp_pscB>:
    1044:	00 24       	eor	r0, r0
    1046:	0a 94       	dec	r0
    1048:	12 16       	cp	r1, r18
    104a:	13 06       	cpc	r1, r19
    104c:	14 06       	cpc	r1, r20
    104e:	05 06       	cpc	r0, r21
    1050:	08 95       	ret

00001052 <__fp_round>:
    1052:	09 2e       	mov	r0, r25
    1054:	03 94       	inc	r0
    1056:	00 0c       	add	r0, r0
    1058:	11 f4       	brne	.+4      	; 0x105e <__fp_round+0xc>
    105a:	88 23       	and	r24, r24
    105c:	52 f0       	brmi	.+20     	; 0x1072 <__fp_round+0x20>
    105e:	bb 0f       	add	r27, r27
    1060:	40 f4       	brcc	.+16     	; 0x1072 <__fp_round+0x20>
    1062:	bf 2b       	or	r27, r31
    1064:	11 f4       	brne	.+4      	; 0x106a <__fp_round+0x18>
    1066:	60 ff       	sbrs	r22, 0
    1068:	04 c0       	rjmp	.+8      	; 0x1072 <__fp_round+0x20>
    106a:	6f 5f       	subi	r22, 0xFF	; 255
    106c:	7f 4f       	sbci	r23, 0xFF	; 255
    106e:	8f 4f       	sbci	r24, 0xFF	; 255
    1070:	9f 4f       	sbci	r25, 0xFF	; 255
    1072:	08 95       	ret

00001074 <__fp_split3>:
    1074:	57 fd       	sbrc	r21, 7
    1076:	90 58       	subi	r25, 0x80	; 128
    1078:	44 0f       	add	r20, r20
    107a:	55 1f       	adc	r21, r21
    107c:	59 f0       	breq	.+22     	; 0x1094 <__fp_splitA+0x10>
    107e:	5f 3f       	cpi	r21, 0xFF	; 255
    1080:	71 f0       	breq	.+28     	; 0x109e <__fp_splitA+0x1a>
    1082:	47 95       	ror	r20

00001084 <__fp_splitA>:
    1084:	88 0f       	add	r24, r24
    1086:	97 fb       	bst	r25, 7
    1088:	99 1f       	adc	r25, r25
    108a:	61 f0       	breq	.+24     	; 0x10a4 <__fp_splitA+0x20>
    108c:	9f 3f       	cpi	r25, 0xFF	; 255
    108e:	79 f0       	breq	.+30     	; 0x10ae <__fp_splitA+0x2a>
    1090:	87 95       	ror	r24
    1092:	08 95       	ret
    1094:	12 16       	cp	r1, r18
    1096:	13 06       	cpc	r1, r19
    1098:	14 06       	cpc	r1, r20
    109a:	55 1f       	adc	r21, r21
    109c:	f2 cf       	rjmp	.-28     	; 0x1082 <__fp_split3+0xe>
    109e:	46 95       	lsr	r20
    10a0:	f1 df       	rcall	.-30     	; 0x1084 <__fp_splitA>
    10a2:	08 c0       	rjmp	.+16     	; 0x10b4 <__fp_splitA+0x30>
    10a4:	16 16       	cp	r1, r22
    10a6:	17 06       	cpc	r1, r23
    10a8:	18 06       	cpc	r1, r24
    10aa:	99 1f       	adc	r25, r25
    10ac:	f1 cf       	rjmp	.-30     	; 0x1090 <__fp_splitA+0xc>
    10ae:	86 95       	lsr	r24
    10b0:	71 05       	cpc	r23, r1
    10b2:	61 05       	cpc	r22, r1
    10b4:	08 94       	sec
    10b6:	08 95       	ret

000010b8 <__fp_zero>:
    10b8:	e8 94       	clt

000010ba <__fp_szero>:
    10ba:	bb 27       	eor	r27, r27
    10bc:	66 27       	eor	r22, r22
    10be:	77 27       	eor	r23, r23
    10c0:	cb 01       	movw	r24, r22
    10c2:	97 f9       	bld	r25, 7
    10c4:	08 95       	ret

000010c6 <__mulsf3>:
    10c6:	0e 94 76 08 	call	0x10ec	; 0x10ec <__mulsf3x>
    10ca:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__fp_round>
    10ce:	0e 94 1b 08 	call	0x1036	; 0x1036 <__fp_pscA>
    10d2:	38 f0       	brcs	.+14     	; 0x10e2 <__mulsf3+0x1c>
    10d4:	0e 94 22 08 	call	0x1044	; 0x1044 <__fp_pscB>
    10d8:	20 f0       	brcs	.+8      	; 0x10e2 <__mulsf3+0x1c>
    10da:	95 23       	and	r25, r21
    10dc:	11 f0       	breq	.+4      	; 0x10e2 <__mulsf3+0x1c>
    10de:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__fp_inf>
    10e2:	0c 94 18 08 	jmp	0x1030	; 0x1030 <__fp_nan>
    10e6:	11 24       	eor	r1, r1
    10e8:	0c 94 5d 08 	jmp	0x10ba	; 0x10ba <__fp_szero>

000010ec <__mulsf3x>:
    10ec:	0e 94 3a 08 	call	0x1074	; 0x1074 <__fp_split3>
    10f0:	70 f3       	brcs	.-36     	; 0x10ce <__mulsf3+0x8>

000010f2 <__mulsf3_pse>:
    10f2:	95 9f       	mul	r25, r21
    10f4:	c1 f3       	breq	.-16     	; 0x10e6 <__mulsf3+0x20>
    10f6:	95 0f       	add	r25, r21
    10f8:	50 e0       	ldi	r21, 0x00	; 0
    10fa:	55 1f       	adc	r21, r21
    10fc:	62 9f       	mul	r22, r18
    10fe:	f0 01       	movw	r30, r0
    1100:	72 9f       	mul	r23, r18
    1102:	bb 27       	eor	r27, r27
    1104:	f0 0d       	add	r31, r0
    1106:	b1 1d       	adc	r27, r1
    1108:	63 9f       	mul	r22, r19
    110a:	aa 27       	eor	r26, r26
    110c:	f0 0d       	add	r31, r0
    110e:	b1 1d       	adc	r27, r1
    1110:	aa 1f       	adc	r26, r26
    1112:	64 9f       	mul	r22, r20
    1114:	66 27       	eor	r22, r22
    1116:	b0 0d       	add	r27, r0
    1118:	a1 1d       	adc	r26, r1
    111a:	66 1f       	adc	r22, r22
    111c:	82 9f       	mul	r24, r18
    111e:	22 27       	eor	r18, r18
    1120:	b0 0d       	add	r27, r0
    1122:	a1 1d       	adc	r26, r1
    1124:	62 1f       	adc	r22, r18
    1126:	73 9f       	mul	r23, r19
    1128:	b0 0d       	add	r27, r0
    112a:	a1 1d       	adc	r26, r1
    112c:	62 1f       	adc	r22, r18
    112e:	83 9f       	mul	r24, r19
    1130:	a0 0d       	add	r26, r0
    1132:	61 1d       	adc	r22, r1
    1134:	22 1f       	adc	r18, r18
    1136:	74 9f       	mul	r23, r20
    1138:	33 27       	eor	r19, r19
    113a:	a0 0d       	add	r26, r0
    113c:	61 1d       	adc	r22, r1
    113e:	23 1f       	adc	r18, r19
    1140:	84 9f       	mul	r24, r20
    1142:	60 0d       	add	r22, r0
    1144:	21 1d       	adc	r18, r1
    1146:	82 2f       	mov	r24, r18
    1148:	76 2f       	mov	r23, r22
    114a:	6a 2f       	mov	r22, r26
    114c:	11 24       	eor	r1, r1
    114e:	9f 57       	subi	r25, 0x7F	; 127
    1150:	50 40       	sbci	r21, 0x00	; 0
    1152:	9a f0       	brmi	.+38     	; 0x117a <__mulsf3_pse+0x88>
    1154:	f1 f0       	breq	.+60     	; 0x1192 <__mulsf3_pse+0xa0>
    1156:	88 23       	and	r24, r24
    1158:	4a f0       	brmi	.+18     	; 0x116c <__mulsf3_pse+0x7a>
    115a:	ee 0f       	add	r30, r30
    115c:	ff 1f       	adc	r31, r31
    115e:	bb 1f       	adc	r27, r27
    1160:	66 1f       	adc	r22, r22
    1162:	77 1f       	adc	r23, r23
    1164:	88 1f       	adc	r24, r24
    1166:	91 50       	subi	r25, 0x01	; 1
    1168:	50 40       	sbci	r21, 0x00	; 0
    116a:	a9 f7       	brne	.-22     	; 0x1156 <__mulsf3_pse+0x64>
    116c:	9e 3f       	cpi	r25, 0xFE	; 254
    116e:	51 05       	cpc	r21, r1
    1170:	80 f0       	brcs	.+32     	; 0x1192 <__mulsf3_pse+0xa0>
    1172:	0c 94 12 08 	jmp	0x1024	; 0x1024 <__fp_inf>
    1176:	0c 94 5d 08 	jmp	0x10ba	; 0x10ba <__fp_szero>
    117a:	5f 3f       	cpi	r21, 0xFF	; 255
    117c:	e4 f3       	brlt	.-8      	; 0x1176 <__mulsf3_pse+0x84>
    117e:	98 3e       	cpi	r25, 0xE8	; 232
    1180:	d4 f3       	brlt	.-12     	; 0x1176 <__mulsf3_pse+0x84>
    1182:	86 95       	lsr	r24
    1184:	77 95       	ror	r23
    1186:	67 95       	ror	r22
    1188:	b7 95       	ror	r27
    118a:	f7 95       	ror	r31
    118c:	e7 95       	ror	r30
    118e:	9f 5f       	subi	r25, 0xFF	; 255
    1190:	c1 f7       	brne	.-16     	; 0x1182 <__mulsf3_pse+0x90>
    1192:	fe 2b       	or	r31, r30
    1194:	88 0f       	add	r24, r24
    1196:	91 1d       	adc	r25, r1
    1198:	96 95       	lsr	r25
    119a:	87 95       	ror	r24
    119c:	97 f9       	bld	r25, 7
    119e:	08 95       	ret

000011a0 <__divmodhi4>:
    11a0:	97 fb       	bst	r25, 7
    11a2:	07 2e       	mov	r0, r23
    11a4:	16 f4       	brtc	.+4      	; 0x11aa <__divmodhi4+0xa>
    11a6:	00 94       	com	r0
    11a8:	07 d0       	rcall	.+14     	; 0x11b8 <__divmodhi4_neg1>
    11aa:	77 fd       	sbrc	r23, 7
    11ac:	09 d0       	rcall	.+18     	; 0x11c0 <__divmodhi4_neg2>
    11ae:	0e 94 ea 08 	call	0x11d4	; 0x11d4 <__udivmodhi4>
    11b2:	07 fc       	sbrc	r0, 7
    11b4:	05 d0       	rcall	.+10     	; 0x11c0 <__divmodhi4_neg2>
    11b6:	3e f4       	brtc	.+14     	; 0x11c6 <__divmodhi4_exit>

000011b8 <__divmodhi4_neg1>:
    11b8:	90 95       	com	r25
    11ba:	81 95       	neg	r24
    11bc:	9f 4f       	sbci	r25, 0xFF	; 255
    11be:	08 95       	ret

000011c0 <__divmodhi4_neg2>:
    11c0:	70 95       	com	r23
    11c2:	61 95       	neg	r22
    11c4:	7f 4f       	sbci	r23, 0xFF	; 255

000011c6 <__divmodhi4_exit>:
    11c6:	08 95       	ret

000011c8 <__tablejump2__>:
    11c8:	ee 0f       	add	r30, r30
    11ca:	ff 1f       	adc	r31, r31
    11cc:	05 90       	lpm	r0, Z+
    11ce:	f4 91       	lpm	r31, Z
    11d0:	e0 2d       	mov	r30, r0
    11d2:	09 94       	ijmp

000011d4 <__udivmodhi4>:
    11d4:	aa 1b       	sub	r26, r26
    11d6:	bb 1b       	sub	r27, r27
    11d8:	51 e1       	ldi	r21, 0x11	; 17
    11da:	07 c0       	rjmp	.+14     	; 0x11ea <__udivmodhi4_ep>

000011dc <__udivmodhi4_loop>:
    11dc:	aa 1f       	adc	r26, r26
    11de:	bb 1f       	adc	r27, r27
    11e0:	a6 17       	cp	r26, r22
    11e2:	b7 07       	cpc	r27, r23
    11e4:	10 f0       	brcs	.+4      	; 0x11ea <__udivmodhi4_ep>
    11e6:	a6 1b       	sub	r26, r22
    11e8:	b7 0b       	sbc	r27, r23

000011ea <__udivmodhi4_ep>:
    11ea:	88 1f       	adc	r24, r24
    11ec:	99 1f       	adc	r25, r25
    11ee:	5a 95       	dec	r21
    11f0:	a9 f7       	brne	.-22     	; 0x11dc <__udivmodhi4_loop>
    11f2:	80 95       	com	r24
    11f4:	90 95       	com	r25
    11f6:	bc 01       	movw	r22, r24
    11f8:	cd 01       	movw	r24, r26
    11fa:	08 95       	ret

000011fc <_exit>:
    11fc:	f8 94       	cli

000011fe <__stop_program>:
    11fe:	ff cf       	rjmp	.-2      	; 0x11fe <__stop_program>
